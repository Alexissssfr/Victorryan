===== /Users/robert/Victorryan/backend/config/supabase.js =====
require("dotenv").config({ path: "../.env" });
const { createClient } = require("@supabase/supabase-js");

const supabaseUrl = process.env.SUPABASE_URL;
const supabaseKey = process.env.SUPABASE_KEY;

if (!supabaseUrl || !supabaseKey) {
  throw new Error("Supabase credentials are missing in environment variables");
}

// Création du client Supabase
const supabase = createClient(supabaseUrl, supabaseKey);

module.exports = supabase;


===== /Users/robert/Victorryan/backend/routes/cards.js =====
const express = require("express");
const router = express.Router();
const cardManager = require("../services/cardManager");

/**
 * @route GET /cards/random
 * @desc Récupérer des cartes aléatoires
 * @access Public
 */
router.get("/random", (req, res) => {
  try {
    const type = req.query.type; // "perso" ou "bonus"
    const count = parseInt(req.query.count) || 5;

    // Vérifier que le type est valide
    if (type !== "perso" && type !== "bonus") {
      return res.status(400).json({
        success: false,
        message: "Le type doit être 'perso' ou 'bonus'",
      });
    }

    // Récupérer les cartes aléatoires
    const cards = cardManager.getRandomCards(type, count);

    res.json({
      success: true,
      count: cards.length,
      cards,
    });
  } catch (error) {
    console.error(
      "Erreur lors de la récupération des cartes aléatoires:",
      error
    );
    res.status(500).json({
      success: false,
      message: "Erreur lors de la récupération des cartes",
    });
  }
});

/**
 * @route GET /cards/:type/:id
 * @desc Récupérer une carte spécifique par son ID
 * @access Public
 */
router.get("/:type/:id", (req, res) => {
  try {
    const { type, id } = req.params;

    // Vérifier que le type est valide
    if (type !== "perso" && type !== "bonus") {
      return res.status(400).json({
        success: false,
        message: "Le type doit être 'perso' ou 'bonus'",
      });
    }

    // Récupérer la carte par son ID
    const card = cardManager.getCardById(type, id);

    if (!card) {
      return res.status(404).json({
        success: false,
        message: "Carte non trouvée",
      });
    }

    res.json({
      success: true,
      card,
    });
  } catch (error) {
    console.error("Erreur lors de la récupération de la carte:", error);
    res.status(500).json({
      success: false,
      message: "Erreur lors de la récupération de la carte",
    });
  }
});

/**
 * @route GET /cards/all/:type
 * @desc Récupérer toutes les cartes d'un type
 * @access Public
 */
router.get("/all/:type", (req, res) => {
  try {
    const { type } = req.params;

    // Vérifier que le type est valide
    if (type !== "perso" && type !== "bonus") {
      return res.status(400).json({
        success: false,
        message: "Le type doit être 'perso' ou 'bonus'",
      });
    }

    // Récupérer toutes les cartes (limite à 100 pour éviter les problèmes de performance)
    const cards = cardManager.getRandomCards(type, 100);

    res.json({
      success: true,
      count: cards.length,
      cards,
    });
  } catch (error) {
    console.error("Erreur lors de la récupération des cartes:", error);
    res.status(500).json({
      success: false,
      message: "Erreur lors de la récupération des cartes",
    });
  }
});

/**
 * @route GET /cards/svg/:type/:id
 * @desc Récupérer le SVG d'une carte spécifique
 * @access Public
 */
router.get("/svg/:type/:id", (req, res) => {
  try {
    const { type, id } = req.params;
    const fs = require("fs");
    const path = require("path");

    // Vérifier que le type est valide
    if (type !== "perso" && type !== "bonus") {
      return res.status(400).json({
        success: false,
        message: "Le type doit être 'perso' ou 'bonus'",
      });
    }

    // Chemin vers le fichier SVG
    const svgFolder = type === "perso" ? "svg_perso" : "svg_bonus";
    const svgPath = path.join(__dirname, `../../stock/${svgFolder}/${id}.svg`);

    // Vérifier si le fichier existe
    if (!fs.existsSync(svgPath)) {
      return res.status(404).json({
        success: false,
        message: "SVG non trouvé",
      });
    }

    // Renvoyer le fichier SVG
    res.setHeader("Content-Type", "image/svg+xml");
    fs.createReadStream(svgPath).pipe(res);
  } catch (error) {
    console.error("Erreur lors de la récupération du SVG:", error);
    res.status(500).json({
      success: false,
      message: "Erreur lors de la récupération du SVG",
    });
  }
});

module.exports = router;


===== /Users/robert/Victorryan/backend/routes/games.js =====
const express = require("express");
const router = express.Router();
const gameManager = require("../services/gameManager")();

/**
 * @route POST /games/create
 * @desc Créer une nouvelle partie
 * @access Public
 */
router.post("/create", async (req, res) => {
  try {
    const { playerId } = req.body;

    // Vérifier que l'ID du joueur est fourni
    if (!playerId) {
      return res.status(400).json({
        success: false,
        message: "L'ID du joueur est requis",
      });
    }

    // Créer une nouvelle partie
    const gameId = await gameManager.createGame(playerId);

    res.json({
      success: true,
      gameId,
      message: "Partie créée avec succès",
    });
  } catch (error) {
    console.error("Erreur lors de la création de la partie:", error);
    res.status(500).json({
      success: false,
      message: "Erreur lors de la création de la partie",
    });
  }
});

/**
 * @route POST /games/join
 * @desc Rejoindre une partie existante
 * @access Public
 */
router.post("/join", async (req, res) => {
  try {
    const { gameId, playerId } = req.body;

    // Vérifier que l'ID de la partie et l'ID du joueur sont fournis
    if (!gameId || !playerId) {
      return res.status(400).json({
        success: false,
        message: "L'ID de la partie et l'ID du joueur sont requis",
      });
    }

    // Rejoindre la partie
    const joined = await gameManager.joinGame(gameId, playerId);

    if (joined) {
      // Récupérer l'état actuel de la partie
      const gameState = await gameManager.getGameState(gameId);

      res.json({
        success: true,
        joined: true,
        gameState,
        message: "Partie rejointe avec succès",
      });
    } else {
      res.status(400).json({
        success: false,
        joined: false,
        message:
          "Impossible de rejoindre la partie. Elle est peut-être complète ou n'existe pas.",
      });
    }
  } catch (error) {
    console.error("Erreur lors de la connexion à la partie:", error);
    res.status(500).json({
      success: false,
      message: "Erreur lors de la connexion à la partie",
    });
  }
});

/**
 * @route POST /games/play
 * @desc Jouer un tour dans une partie
 * @access Public
 */
router.post("/play", async (req, res) => {
  try {
    const { gameId, playerId, actions } = req.body;

    // Vérifier que toutes les informations nécessaires sont fournies
    if (!gameId || !playerId || !actions) {
      return res.status(400).json({
        success: false,
        message: "L'ID de la partie, l'ID du joueur et les actions sont requis",
      });
    }

    // Jouer le tour
    const success = await gameManager.playTurn(gameId, playerId, actions);

    if (success) {
      // Récupérer l'état mis à jour de la partie
      const gameState = await gameManager.getGameState(gameId);

      res.json({
        success: true,
        gameState,
        message: "Tour joué avec succès",
      });
    } else {
      res.status(400).json({
        success: false,
        message:
          "Impossible de jouer le tour. Vérifiez que c'est bien votre tour et que la partie est en cours.",
      });
    }
  } catch (error) {
    console.error("Erreur lors du tour de jeu:", error);
    res.status(500).json({
      success: false,
      message: "Erreur lors du tour de jeu",
    });
  }
});

/**
 * @route GET /games/:gameId
 * @desc Récupérer l'état d'une partie
 * @access Public
 */
router.get("/:gameId", async (req, res) => {
  try {
    const { gameId } = req.params;

    // Récupérer l'état de la partie
    const gameState = await gameManager.getGameState(gameId);

    if (gameState) {
      res.json({
        success: true,
        gameState,
      });
    } else {
      res.status(404).json({
        success: false,
        message: "Partie non trouvée",
      });
    }
  } catch (error) {
    console.error(
      "Erreur lors de la récupération de l'état de la partie:",
      error
    );
    res.status(500).json({
      success: false,
      message: "Erreur lors de la récupération de l'état de la partie",
    });
  }
});

module.exports = router;


===== /Users/robert/Victorryan/backend/services/cardManager.js =====
const fs = require("fs");
const path = require("path");

// Charger les données des cartes depuis les fichiers JSON
let persoData;
let bonusData;

try {
  persoData = JSON.parse(
    fs.readFileSync(path.join(__dirname, "../stock/personnages.json"), "utf8")
  );
  bonusData = JSON.parse(
    fs.readFileSync(path.join(__dirname, "../stock/bonus.json"), "utf8")
  );
} catch (error) {
  console.error("Erreur lors du chargement des données des cartes:", error);
  // Initialiser avec des tableaux vides en cas d'erreur
  persoData = [];
  bonusData = [];
}

// Méthode pour récupérer des cartes aléatoires d'un type spécifique
function getRandomCards(type, count) {
  // Déterminer quelle source de données utiliser
  const data = type === "perso" ? persoData : bonusData;

  // S'assurer que count ne dépasse pas le nombre de cartes disponibles
  count = Math.min(count, data.length);

  // Copier le tableau pour ne pas modifier l'original
  const shuffled = [...data];

  // Mélanger le tableau
  for (let i = shuffled.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];
  }

  // Ajouter l'URL de l'image pour chaque carte
  return shuffled.slice(0, count).map((card) => {
    // Détermine quel type de SVG utiliser
    const svgType = type === "perso" ? "svg_perso" : "svg_bonus";

    // Construire l'URL du SVG
    card.imageUrl = `/stock/${svgType}/${card.id}.svg`;

    // Ajouter le type pour faciliter la gestion côté client
    card.type = type;

    return card;
  });
}

// Méthode pour récupérer une carte spécifique par son ID
function getCardById(type, id) {
  const data = type === "perso" ? persoData : bonusData;
  const card = data.find((card) => card.id === id);

  if (card) {
    const svgType = type === "perso" ? "svg_perso" : "svg_bonus";
    card.imageUrl = `/stock/${svgType}/${card.id}.svg`;
    card.type = type;
  }

  return card;
}

// Méthode pour précharger toutes les données SVG
function preloadSVGData() {
  const svgData = {
    perso: {},
    bonus: {},
  };

  // Charger les SVG des personnages
  persoData.forEach((card) => {
    try {
      const svgPath = path.join(__dirname, `../stock/svg_perso/${card.id}.svg`);
      if (fs.existsSync(svgPath)) {
        svgData.perso[card.id] = fs.readFileSync(svgPath, "utf8");
      }
    } catch (err) {
      console.error(`Erreur lors du chargement du SVG pour ${card.id}:`, err);
    }
  });

  // Charger les SVG des bonus
  bonusData.forEach((card) => {
    try {
      const svgPath = path.join(__dirname, `../stock/svg_bonus/${card.id}.svg`);
      if (fs.existsSync(svgPath)) {
        svgData.bonus[card.id] = fs.readFileSync(svgPath, "utf8");
      }
    } catch (err) {
      console.error(`Erreur lors du chargement du SVG pour ${card.id}:`, err);
    }
  });

  return svgData;
}

module.exports = {
  getRandomCards,
  getCardById,
  preloadSVGData,
};


===== /Users/robert/Victorryan/backend/services/gameManager.js =====
const supabase = require("../config/supabase");
const cardManager = require("./cardManager");
const crypto = require("crypto");

// Map pour stocker les parties actives en mémoire
const activeGames = new Map();

// Fonction pour gérer les parties avec Socket.io
module.exports = function (io) {
  return {
    createGame: async function (playerId) {
      const gameId = generateUniqueId();

      // Structure initiale de la partie
      const gameState = {
        id: gameId,
        player1: {
          id: playerId,
          health: {},
          attack: {},
          turns: {},
          activeBonus: {},
          deck: [],
          hand: [],
        },
        player2: null,
        currentPlayer: "player1",
        gameOver: false,
        winner: null,
        createdAt: new Date().toISOString(),
      };

      // Sauvegarder dans la Map locale
      activeGames.set(gameId, gameState);

      // Sauvegarder l'état initial de la partie dans Supabase
      await supabase.from("games").insert([gameState]);

      return gameId;
    },

    joinGame: async function (gameId, playerId) {
      console.log(
        `Tentative de rejoindre la partie ${gameId} pour le joueur ${playerId}`
      );

      // Récupérer la partie depuis la Map ou Supabase
      let game = activeGames.get(gameId);

      if (!game) {
        // Si la partie n'est pas en mémoire, la chercher dans Supabase
        console.log(`Recherche de la partie ${gameId} dans Supabase`);
        try {
          const { data, error } = await supabase
            .from("games")
            .select("*")
            .eq("id", gameId)
            .single();

          if (error) {
            console.error("Erreur Supabase:", error);
            return false;
          }

          if (!data) {
            console.log("Partie non trouvée dans Supabase");
            return false;
          }

          game = data;
          activeGames.set(gameId, game);
          console.log("Partie récupérée depuis Supabase:", gameId);
        } catch (err) {
          console.error("Exception lors de la recherche dans Supabase:", err);
          return false;
        }
      }

      // Si le joueur 1 essaie de rejoindre à nouveau, retourner l'état actuel
      if (game.player1 && game.player1.id === playerId) {
        console.log(`Le joueur 1 (${playerId}) rejoint sa propre partie`);

        // Si le joueur 1 n'a pas encore de cartes, les distribuer
        if (!game.player1.hand || game.player1.hand.length === 0) {
          console.log("Distribution initiale de cartes pour le joueur 1");
          const persoCards = await cardManager.getRandomCards("perso", 5);
          const bonusCards = await cardManager.getRandomCards("bonus", 5);

          game.player1.hand = [...persoCards, ...bonusCards];

          // Initialiser les statistiques des cartes
          persoCards.forEach((card) => {
            game.player1.health[card.id] = parseInt(card.pointsdevie) || 100;
            game.player1.attack[card.id] = parseInt(card.forceattaque) || 30;
            game.player1.turns[card.id] = parseInt(card.tourattaque) || 2;
          });

          // Mettre à jour dans la Map locale et Supabase
          activeGames.set(gameId, game);
          await supabase.from("games").update(game).eq("id", gameId);
        }

        return true;
      }

      // Si la partie n'a pas de joueur 2 ou si c'est le joueur 2 qui rejoint
      if (!game.player2 || (game.player2 && game.player2.id === playerId)) {
        // Si c'est un nouveau joueur 2
        if (!game.player2) {
          console.log(`Nouveau joueur 2 (${playerId}) rejoint la partie`);

          // Initialiser le joueur 2
          game.player2 = {
            id: playerId,
            health: {},
            attack: {},
            turns: {},
            activeBonus: {},
            deck: [],
            hand: [],
          };
        } else {
          console.log(`Le joueur 2 existant (${playerId}) rejoint à nouveau`);
        }

        // Distribuer les cartes aux joueurs si nécessaire
        let updateNeeded = false;

        // Vérifier/distribuer les cartes au joueur 1 si nécessaire
        if (!game.player1.hand || game.player1.hand.length === 0) {
          console.log("Distribution de cartes pour le joueur 1");
          updateNeeded = true;

          const persoCardsP1 = await cardManager.getRandomCards("perso", 5);
          const bonusCardsP1 = await cardManager.getRandomCards("bonus", 5);

          // Configuration des cartes joueur 1
          game.player1.hand = [...persoCardsP1, ...bonusCardsP1];
          persoCardsP1.forEach((card) => {
            game.player1.health[card.id] = parseInt(card.pointsdevie) || 100;
            game.player1.attack[card.id] = parseInt(card.forceattaque) || 30;
            game.player1.turns[card.id] = parseInt(card.tourattaque) || 2;
          });
        }

        // Vérifier/distribuer les cartes au joueur 2 si nécessaire
        if (!game.player2.hand || game.player2.hand.length === 0) {
          console.log("Distribution de cartes pour le joueur 2");
          updateNeeded = true;

          const persoCardsP2 = await cardManager.getRandomCards("perso", 5);
          const bonusCardsP2 = await cardManager.getRandomCards("bonus", 5);

          // Configuration des cartes joueur 2
          game.player2.hand = [...persoCardsP2, ...bonusCardsP2];
          persoCardsP2.forEach((card) => {
            game.player2.health[card.id] = parseInt(card.pointsdevie) || 100;
            game.player2.attack[card.id] = parseInt(card.forceattaque) || 30;
            game.player2.turns[card.id] = parseInt(card.tourattaque) || 2;
          });
        }

        // Mettre à jour dans la Map locale
        activeGames.set(gameId, game);

        // Mettre à jour l'état de la partie dans Supabase si nécessaire
        if (updateNeeded) {
          try {
            await supabase.from("games").update(game).eq("id", gameId);
            console.log("État de jeu mis à jour dans Supabase");
          } catch (err) {
            console.error("Erreur lors de la mise à jour dans Supabase:", err);
          }
        }

        // Notifier les joueurs via Socket.io
        if (io) {
          io.to(gameId).emit("gameStarted", {
            gameId,
            player1Id: game.player1.id,
            player2Id: game.player2.id,
            currentPlayer: game.currentPlayer,
          });
          console.log("Événement gameStarted émis");
        }

        return true;
      }

      console.log(
        "Impossible de rejoindre la partie (déjà complète ou autre problème)"
      );
      return false;
    },

    playTurn: async function (gameId, playerId, actions) {
      // Récupérer la partie
      let game = activeGames.get(gameId);

      if (!game) {
        // Si la partie n'est pas en mémoire, la chercher dans Supabase
        const { data, error } = await supabase
          .from("games")
          .select("*")
          .eq("id", gameId)
          .single();

        if (error || !data) {
          console.error("Partie introuvable:", error);
          return false;
        }

        game = data;
        activeGames.set(gameId, game);
      }

      if (!game || game.gameOver) {
        return false;
      }

      // Déterminer quel joueur joue
      const playerKey = game.player1.id === playerId ? "player1" : "player2";

      // Vérifier que c'est bien le tour du joueur
      if (game.currentPlayer !== playerKey) {
        return false;
      }

      const player = game[playerKey];
      const opponent = playerKey === "player1" ? game.player2 : game.player1;

      // Traiter les actions
      if (actions.bonus && actions.bonus.length > 0) {
        applyBonusEffects(player, opponent, actions.bonus);
      }

      if (actions.attack && actions.attack.targetId) {
        applyAttack(player, opponent, actions.attack, game);
      }

      // Vérifier les conditions de victoire
      if (checkWinCondition(game)) {
        game.gameOver = true;
        game.winner = playerKey;

        // Notifier les joueurs de la fin de partie
        if (io) {
          io.to(gameId).emit("gameOver", {
            gameId,
            winner: playerKey,
            player1Health: game.player1.health,
            player2Health: game.player2.health,
          });
        }
      } else {
        // Passer au joueur suivant
        game.currentPlayer =
          game.currentPlayer === "player1" ? "player2" : "player1";

        // Notifier du changement de tour
        if (io) {
          io.to(gameId).emit("turnChanged", {
            gameId,
            currentPlayer: game.currentPlayer,
            player1Health: game.player1.health,
            player2Health: game.player2.health,
          });
        }
      }

      // Mettre à jour dans la Map locale
      activeGames.set(gameId, game);

      // Mettre à jour l'état de la partie dans Supabase
      await supabase.from("games").update(game).eq("id", gameId);

      return true;
    },

    getGameState: async function (gameId) {
      // Récupérer la partie depuis la Map ou Supabase
      let game = activeGames.get(gameId);

      if (!game) {
        // Si la partie n'est pas en mémoire, la chercher dans Supabase
        const { data, error } = await supabase
          .from("games")
          .select("*")
          .eq("id", gameId)
          .single();

        if (error || !data) {
          console.error("Partie introuvable:", error);
          return null;
        }

        game = data;
        activeGames.set(gameId, game);
      }

      return game;
    },
  };
};

// Fonctions utilitaires

// Générer un identifiant unique pour la partie
function generateUniqueId() {
  // Générer un UUID v4 compatible avec Supabase
  return crypto.randomUUID();
}

// Appliquer les effets des bonus
function applyBonusEffects(player, opponent, bonusActions) {
  if (!bonusActions || !Array.isArray(bonusActions)) return;

  bonusActions.forEach((action) => {
    const { bonusId, targetId } = action;

    // Vérifier que la carte bonus existe dans la main du joueur
    const bonusIndex = player.hand.findIndex((card) => card.id === bonusId);
    if (bonusIndex === -1) return;

    const bonusCard = player.hand[bonusIndex];

    // Vérifier que la carte cible existe
    if (!player.health[targetId]) return;

    // Initialiser les bonus actifs pour cette carte s'ils n'existent pas
    if (!player.activeBonus[targetId]) {
      player.activeBonus[targetId] = [];
    }

    // Ajouter le bonus à la carte cible
    player.activeBonus[targetId].push({
      id: bonusId,
      value: parseInt(bonusCard.pourcentagebonus) || 0,
      remainingTurns: parseInt(bonusCard.tourbonus) || 1,
    });

    // Retirer la carte bonus de la main du joueur
    player.hand.splice(bonusIndex, 1);
  });
}

// Appliquer une attaque
function applyAttack(attacker, defender, attackAction, game) {
  const { cardId, targetId } = attackAction;

  // Vérifier que la carte d'attaque existe et a des tours restants
  if (
    !attacker.health[cardId] ||
    !attacker.turns[cardId] ||
    attacker.turns[cardId] <= 0
  ) {
    return;
  }

  // Vérifier que la cible existe
  if (!defender.health[targetId] || defender.health[targetId] <= 0) {
    return;
  }

  // Calculer la force d'attaque de base
  let attackPower = attacker.attack[cardId] || 0;

  // Appliquer les bonus actifs
  if (attacker.activeBonus[cardId] && attacker.activeBonus[cardId].length > 0) {
    attacker.activeBonus[cardId].forEach((bonus) => {
      // Augmenter l'attaque en fonction du bonus
      attackPower += attackPower * (bonus.value / 100);
    });
  }

  // Arrondir pour avoir un entier
  attackPower = Math.round(attackPower);

  // Réduire les points de vie de la cible
  defender.health[targetId] = Math.max(
    0,
    defender.health[targetId] - attackPower
  );

  // Réduire le nombre de tours d'attaque
  attacker.turns[cardId]--;

  // Mettre à jour les tours restants des bonus et supprimer ceux expirés
  Object.keys(attacker.activeBonus).forEach((cardId) => {
    attacker.activeBonus[cardId] = attacker.activeBonus[cardId].filter(
      (bonus) => {
        bonus.remainingTurns--;
        return bonus.remainingTurns > 0;
      }
    );

    // Si plus aucun bonus, supprimer la clé
    if (attacker.activeBonus[cardId].length === 0) {
      delete attacker.activeBonus[cardId];
    }
  });
}

// Vérifier les conditions de victoire
function checkWinCondition(game) {
  // Vérifier si un joueur a perdu toutes ses cartes (santé à 0)
  const player1Alive = Object.values(game.player1.health).some(
    (health) => health > 0
  );
  const player2Alive = Object.values(game.player2.health).some(
    (health) => health > 0
  );

  // Vérifier si un joueur a encore des tours d'attaque disponibles
  const player1CanAttack = Object.values(game.player1.turns).some(
    (turns) => turns > 0
  );
  const player2CanAttack = Object.values(game.player2.turns).some(
    (turns) => turns > 0
  );

  // Si les deux joueurs sont en vie mais ne peuvent plus attaquer, c'est un match nul
  if (player1Alive && player2Alive && !player1CanAttack && !player2CanAttack) {
    // Calculer le total des points de vie restants
    const player1TotalHealth = Object.values(game.player1.health).reduce(
      (sum, health) => sum + health,
      0
    );
    const player2TotalHealth = Object.values(game.player2.health).reduce(
      (sum, health) => sum + health,
      0
    );

    // Le gagnant est celui avec le plus de points de vie
    if (player1TotalHealth > player2TotalHealth) {
      game.winner = "player1";
    } else if (player2TotalHealth > player1TotalHealth) {
      game.winner = "player2";
    } else {
      game.winner = "draw"; // Match nul
    }

    return true;
  }

  // Si un joueur n'a plus de personnages en vie, l'autre gagne
  if (!player1Alive) {
    game.winner = "player2";
    return true;
  }

  if (!player2Alive) {
    game.winner = "player1";
    return true;
  }

  // Sinon, la partie continue
  return false;
}


===== /Users/robert/Victorryan/backend/package.json =====
{
  "name": "victorryan-backend",
  "version": "1.0.0",
  "main": "server.js",
  "type": "commonjs",
  "scripts": {
    "start": "node server.js",
    "dev": "nodemon server.js"
  },
  "dependencies": {
    "express": "^4.18.2",
    "socket.io": "^4.7.2",
    "cors": "^2.8.5"
  },
  "devDependencies": {
    "nodemon": "^3.0.2"
  }
} 

===== /Users/robert/Victorryan/frontend/css/cards.css =====


===== /Users/robert/Victorryan/frontend/css/game.css =====
/* Styles principaux pour le jeu */
:root {
    --primary-color: #3498db;
    --secondary-color: #e74c3c;
    --neutral-color: #7f8c8d;
    --background-color: #ecf0f1;
    --card-background: #fff;
    --card-border: #ddd;
    --card-shadow: rgba(0, 0, 0, 0.1);
    --bonus-color: #f39c12;
    --health-color: #2ecc71;
    --attack-color: #e74c3c;
  }
  
  * {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
  }
  
  body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    line-height: 1.6;
    color: #333;
    background-color: var(--background-color);
    padding: 20px;
  }
  
  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
  }
  
  /* Styles pour le menu principal */
  #main-menu {
    text-align: center;
    padding: 40px 0;
  }
  
  #main-menu h1 {
    font-size: 3rem;
    margin-bottom: 30px;
    color: var(--primary-color);
  }
  
  .menu-options {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 20px;
    margin-top: 30px;
  }
  
  .menu-option {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 10px;
    width: 100%;
    max-width: 400px;
  }
  
  .btn {
    padding: 12px 24px;
    background-color: var(--primary-color);
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-size: 1rem;
    transition: background-color 0.3s;
  }
  
  .btn:hover {
    background-color: #2980b9;
  }
  
  .btn:disabled {
    background-color: var(--neutral-color);
    cursor: not-allowed;
  }
  
  input[type="text"] {
    padding: 10px;
    border: 1px solid #ddd;
    border-radius: 4px;
    width: 100%;
    font-size: 1rem;
  }
  
  /* Styles pour le plateau de jeu */
  #game-board {
    display: none; /* Caché par défaut */
    margin-top: 20px;
  }
  
  .game-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 20px;
    padding: 10px;
    background-color: white;
    border-radius: 4px;
    box-shadow: 0 2px 5px var(--card-shadow);
  }
  
  .game-info {
    display: flex;
    flex-direction: column;
    gap: 5px;
  }
  
  #game-id-display {
    font-weight: bold;
    color: var(--primary-color);
  }
  
  #turn-indicator {
    padding: 5px 10px;
    border-radius: 4px;
    font-weight: bold;
  }
  
  #turn-indicator.your-turn {
    background-color: var(--primary-color);
    color: white;
  }
  
  #turn-indicator.opponent-turn {
    background-color: var(--secondary-color);
    color: white;
  }
  
  .game-status {
    display: flex;
    align-items: center;
    gap: 10px;
  }
  
  #status-display {
    padding: 5px 10px;
    border-radius: 4px;
    background-color: var(--neutral-color);
    color: white;
  }
  
  .status-indicator {
    width: 10px;
    height: 10px;
    border-radius: 50%;
    display: inline-block;
  }
  
  .status-indicator.connected {
    background-color: var(--health-color);
  }
  
  .status-indicator.disconnected {
    background-color: var(--secondary-color);
  }
  
  .status-indicator.waiting {
    background-color: var(--bonus-color);
  }
  
  /* Styles des zones de cartes */
  .cards-container {
    display: flex;
    flex-direction: column;
    gap: 30px;
    margin-bottom: 30px;
  }
  
  .player-area {
    padding: 15px;
    background-color: rgba(255, 255, 255, 0.8);
    border-radius: 8px;
    box-shadow: 0 3px 10px var(--card-shadow);
  }
  
  .player-area h2 {
    margin-bottom: 15px;
    color: var(--primary-color);
    font-size: 1.5rem;
  }
  
  .player-area.opponent h2 {
    color: var(--secondary-color);
  }
  
  .cards-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
    gap: 15px;
    justify-content: center;
  }
  
  /* Styles des cartes */
  .card {
    position: relative;
    width: 150px;
    height: 220px;
    background-color: var(--card-background);
    border: 1px solid var(--card-border);
    border-radius: 8px;
    box-shadow: 0 3px 6px var(--card-shadow);
    overflow: hidden;
    transition: transform 0.3s, box-shadow 0.3s;
    cursor: pointer;
    display: flex;
    flex-direction: column;
  }
  
  .card:hover {
    transform: translateY(-5px);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
  }
  
  .card.selected {
    border: 3px solid var(--primary-color);
    transform: translateY(-5px) scale(1.02);
  }
  
  .card.selected-target {
    border: 3px solid var(--secondary-color);
    transform: translateY(-5px) scale(1.02);
  }
  
  .card-header {
    background-color: var(--primary-color);
    color: white;
    padding: 5px;
    font-weight: bold;
    text-align: center;
    font-size: 0.9rem;
  }
  
  .card img {
    flex: 1;
    width: 100%;
    object-fit: cover;
  }
  
  .card-stats {
    display: flex;
    justify-content: space-between;
    padding: 5px;
    background-color: rgba(0, 0, 0, 0.05);
    font-size: 0.8rem;
  }
  
  .stat {
    padding: 2px 5px;
    border-radius: 3px;
  }
  
  .stat:nth-child(1) {
    background-color: var(--health-color);
    color: white;
  }
  
  .stat:nth-child(2) {
    background-color: var(--attack-color);
    color: white;
  }
  
  .stat:nth-child(3) {
    background-color: var(--neutral-color);
    color: white;
  }
  
  .card-name {
    padding: 5px;
    text-align: center;
    font-weight: bold;
    font-size: 0.9rem;
    background-color: white;
  }
  
  .card.has-bonus::after {
    content: "★";
    position: absolute;
    top: 5px;
    right: 5px;
    color: var(--bonus-color);
    font-size: 1.2rem;
  }
  
  .card.low-health .stat:nth-child(1) {
    background-color: var(--secondary-color);
    animation: pulse 1.5s infinite;
  }
  
  .card.no-turns .stat:nth-child(3) {
    background-color: #999;
  }
  
  .bonus-indicator {
    position: absolute;
    top: 30px;
    right: 5px;
    background-color: var(--bonus-color);
    color: white;
    padding: 2px 5px;
    border-radius: 10px;
    font-size: 0.7rem;
  }
  
  .opponent-card .card-stats {
    justify-content: center;
  }
  
  .card-back {
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    background: repeating-linear-gradient(
      45deg,
      #3498db,
      #3498db 10px,
      #2980b9 10px,
      #2980b9 20px
    );
    color: white;
    font-weight: bold;
    text-align: center;
    padding: 10px;
  }
  
  /* Contrôles du jeu */
  #game-controls {
    display: flex;
    justify-content: center;
    gap: 15px;
    margin-top: 20px;
    padding: 15px;
    background-color: white;
    border-radius: 8px;
    box-shadow: 0 3px 10px var(--card-shadow);
  }
  
  .action-btn {
    padding: 10px 20px;
    background-color: var(--primary-color);
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-weight: bold;
    transition: background-color 0.3s;
  }
  
  .action-btn:hover:not(:disabled) {
    background-color: #2980b9;
  }
  
  .action-btn:disabled {
    background-color: var(--neutral-color);
    cursor: not-allowed;
    opacity: 0.7;
  }
  
  /* Zone de notification */
  #notification-area {
    position: fixed;
    top: 20px;
    right: 20px;
    width: 300px;
    z-index: 1000;
  }
  
  .notification {
    padding: 15px;
    margin-bottom: 10px;
    border-radius: 5px;
    background-color: white;
    box-shadow: 0 3px 10px rgba(0, 0, 0, 0.2);
    animation: slideIn 0.3s ease-out;
  }
  
  .notification.info {
    border-left: 5px solid var(--primary-color);
  }
  
  .notification.success {
    border-left: 5px solid var(--health-color);
  }
  
  .notification.error {
    border-left: 5px solid var(--secondary-color);
  }
  
  .notification.warning {
    border-left: 5px solid var(--bonus-color);
  }
  
  /* Animations */
  @keyframes pulse {
    0% { opacity: 1; }
    50% { opacity: 0.5; }
    100% { opacity: 1; }
  }
  
  @keyframes slideIn {
    from { transform: translateX(100%); opacity: 0; }
    to { transform: translateX(0); opacity: 1; }
  }
  
  /* Responsive design */
  @media (max-width: 768px) {
    .cards-grid {
      grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
    }
    
    .card {
      width: 120px;
      height: 180px;
    }
    
    .card-stats,
    .card-name {
      font-size: 0.75rem;
    }
    
    #game-controls {
      flex-wrap: wrap;
    }
  }
  
  @media (max-width: 480px) {
    .game-header {
      flex-direction: column;
      align-items: flex-start;
      gap: 10px;
    }
    
    .cards-grid {
      grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
    }
    
    .card {
      width: 100px;
      height: 150px;
    }
    
    .card-header,
    .card-stats,
    .card-name {
      font-size: 0.7rem;
      padding: 3px;
    }
  }

===== /Users/robert/Victorryan/frontend/css/responsive.css =====


===== /Users/robert/Victorryan/frontend/js/cardManager.js =====
const fs = require("fs");
const path = require("path");

// Définir des données par défaut au cas où les fichiers ne peuvent pas être chargés
let persoData = [];
let bonusData = [];

// Fonction pour charger les données à partir des fichiers JSON
function loadCardData() {
  try {
    // Chemin relatif depuis la racine du projet
    const persoPath = path.join(__dirname, "../../stock/personnages.json");
    const bonusPath = path.join(__dirname, "../../stock/bonus.json");

    console.log("Tentative de chargement des personnages depuis:", persoPath);
    console.log("Tentative de chargement des bonus depuis:", bonusPath);

    try {
      if (fs.existsSync(persoPath)) {
        persoData = JSON.parse(fs.readFileSync(persoPath, "utf8"));
        console.log(`${persoData.length} personnages chargés avec succès`);
      } else {
        console.error("Fichier personnages.json introuvable");
      }
    } catch (e) {
      console.error("Erreur lors du chargement des personnages:", e);
    }

    try {
      if (fs.existsSync(bonusPath)) {
        bonusData = JSON.parse(fs.readFileSync(bonusPath, "utf8"));
        console.log(`${bonusData.length} bonus chargés avec succès`);
      } else {
        console.error("Fichier bonus.json introuvable");
      }
    } catch (e) {
      console.error("Erreur lors du chargement des bonus:", e);
    }

    // Si aucune donnée n'a été chargée, utiliser des données fictives pour le développement
    if (persoData.length === 0) {
      console.warn("Aucun personnage chargé, utilisation de données de test");
      persoData = generateDummyPersoData();
    }

    if (bonusData.length === 0) {
      console.warn("Aucun bonus chargé, utilisation de données de test");
      bonusData = generateDummyBonusData();
    }
  } catch (error) {
    console.error("Erreur lors du chargement des données des cartes:", error);
  }
}

// Générer des données de test pour les personnages
function generateDummyPersoData() {
  const dummyPerso = [];
  for (let i = 1; i <= 10; i++) {
    dummyPerso.push({
      id: `P${i}`,
      nomcarteperso: `Personnage Test ${i}`,
      pointsdevie: "100",
      forceattaque: "30",
      tourattaque: "2",
      nomdupouvoir: `Pouvoir Test ${i}`,
      description: "Description du pouvoir de test",
      type: "perso",
    });
  }
  return dummyPerso;
}

// Générer des données de test pour les bonus
function generateDummyBonusData() {
  const dummyBonus = [];
  for (let i = 1; i <= 10; i++) {
    dummyBonus.push({
      id: `B${i}`,
      nomcartebonus: `Bonus Test ${i}`,
      pourcentagebonus: "20",
      tourbonus: "2",
      nomdupouvoir: `Effet Test ${i}`,
      description: "Description de l'effet de test",
      type: "bonus",
    });
  }
  return dummyBonus;
}

// Charger les données au démarrage
loadCardData();

// Méthode pour récupérer des cartes aléatoires d'un type spécifique
function getRandomCards(type, count) {
  // Déterminer quelle source de données utiliser
  const data = type === "perso" ? persoData : bonusData;

  // S'assurer que count ne dépasse pas le nombre de cartes disponibles
  count = Math.min(count, data.length);

  // Copier le tableau pour ne pas modifier l'original
  const shuffled = [...data];

  // Mélanger le tableau
  for (let i = shuffled.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];
  }

  // Ajouter l'URL de l'image et le type pour chaque carte
  return shuffled.slice(0, count).map((card) => {
    // Copie pour ne pas modifier l'original
    const cardCopy = { ...card };

    // Détermine quel type de SVG utiliser
    const svgType = type === "perso" ? "svg_perso" : "svg_bonus";

    // Construire l'URL du SVG
    cardCopy.imageUrl = `/stock/${svgType}/${cardCopy.id}.svg`;

    // Ajouter le type pour faciliter la gestion côté client
    cardCopy.type = type;

    return cardCopy;
  });
}

// Méthode pour récupérer une carte spécifique par son ID
function getCardById(type, id) {
  const data = type === "perso" ? persoData : bonusData;
  const card = data.find((card) => card.id === id);

  if (card) {
    // Copie pour ne pas modifier l'original
    const cardCopy = { ...card };

    const svgType = type === "perso" ? "svg_perso" : "svg_bonus";
    cardCopy.imageUrl = `/stock/${svgType}/${cardCopy.id}.svg`;
    cardCopy.type = type;

    return cardCopy;
  }

  return null;
}

// Fonction pour recharger les données (utile pour les tests ou mises à jour)
function reloadCardData() {
  loadCardData();
  return { persoCount: persoData.length, bonusCount: bonusData.length };
}

module.exports = {
  getRandomCards,
  getCardById,
  reloadCardData,
};


===== /Users/robert/Victorryan/frontend/js/game.js =====
// Récupérer les éléments du DOM
const createGameBtn = document.getElementById("create-game-btn");
const joinGameBtn = document.getElementById("join-game-btn");
const gameIdInput = document.getElementById("game-id-input");
const mainMenu = document.getElementById("main-menu");
const gameBoard = document.getElementById("game-board");
const player1CardsContainer = document.getElementById("player1-cards");
const player2CardsContainer = document.getElementById("player2-cards");
const playBonusBtn = document.getElementById("play-bonus-btn");
const attackBtn = document.getElementById("attack-btn");
const endTurnBtn = document.getElementById("end-turn-btn");
const turnIndicator = document.getElementById("turn-indicator");
const gameIdDisplay = document.getElementById("game-id-display");
const statusDisplay = document.getElementById("status-display");

// Variables globales
let gameId = null;
let playerId = null;
let playerCards = [];
let selectedCardId = null;
let selectedTargetId = null;
let selectedBonusCards = [];
let isMyTurn = false;
let playerKey = null; // 'player1' ou 'player2'

// Fonction pour créer une partie
async function createGame() {
  try {
    // Générer un ID de joueur unique
    playerId = generatePlayerId();

    statusDisplay.textContent = "Création de la partie...";

    const response = await fetch("/games/create", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({ playerId }),
    });

    const data = await response.json();

    if (data.success) {
      gameId = data.gameId;
      playerKey = "player1"; // Le créateur est toujours le joueur 1

      // Afficher l'ID de la partie pour que le joueur 2 puisse le rejoindre
      gameIdDisplay.textContent = `ID de la partie: ${gameId}`;
      statusDisplay.textContent = "En attente d'un adversaire...";

      // Connecter via WebSocket
      if (window.gameSocket) {
        window.gameSocket.joinGame(gameId, playerId);
      }

      // Passer à l'écran de jeu
      mainMenu.style.display = "none";
      gameBoard.style.display = "block";

      // Initialiser le plateau de jeu
      await joinGame();
    } else {
      alert("Erreur lors de la création de la partie: " + data.message);
    }
  } catch (error) {
    console.error("Erreur lors de la création de la partie:", error);
    alert("Erreur de connexion au serveur.");
  }
}

// Fonction pour rejoindre une partie
async function joinGame() {
  try {
    statusDisplay.textContent = "Connexion à la partie...";

    const response = await fetch("/games/join", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({ gameId, playerId }),
    });

    const data = await response.json();

    if (data.success && data.joined) {
      // La partie a été rejointe avec succès
      mainMenu.style.display = "none";
      gameBoard.style.display = "block";

      // Si c'est le joueur 2 qui rejoint
      if (!playerKey) {
        playerKey = "player2";
      }

      // Déterminer si c'est le tour du joueur
      isMyTurn = data.gameState.currentPlayer === playerKey;
      updateTurnIndicator();

      // Récupérer les cartes du joueur
      if (data.gameState[playerKey]) {
        playerCards = data.gameState[playerKey].hand || [];
        renderPlayerCards();
      }

      // Connecter via WebSocket si ce n'est pas déjà fait
      if (window.gameSocket) {
        window.gameSocket.joinGame(gameId, playerId);
      }

      // Configurer les événements pour les actions du joueur
      setupGameEvents();

      statusDisplay.textContent = "Partie en cours";
    } else {
      alert(
        "Impossible de rejoindre la partie: " +
          (data.message || "La partie est peut-être complète ou n'existe pas.")
      );
    }
  } catch (error) {
    console.error("Erreur lors de la connexion à la partie:", error);
    alert("Erreur de connexion au serveur.");
  }
}

// Fonction pour mettre à jour l'indicateur de tour
function updateTurnIndicator() {
  if (turnIndicator) {
    turnIndicator.textContent = isMyTurn
      ? "C'est votre tour"
      : "Tour de l'adversaire";
    turnIndicator.className = isMyTurn ? "your-turn" : "opponent-turn";

    // Activer/désactiver les boutons d'action
    if (playBonusBtn) playBonusBtn.disabled = !isMyTurn;
    if (attackBtn) attackBtn.disabled = !isMyTurn;
    if (endTurnBtn) endTurnBtn.disabled = !isMyTurn;
  }
}

// Fonction pour configurer les événements du jeu
function setupGameEvents() {
  // Événement de clic sur les cartes du joueur
  player1CardsContainer.addEventListener("click", (event) => {
    const cardElement = event.target.closest(".card");
    if (!cardElement) return;

    if (isMyTurn) {
      // Si une carte est déjà sélectionnée, la désélectionner
      const previousSelected =
        player1CardsContainer.querySelector(".card.selected");
      if (previousSelected) {
        previousSelected.classList.remove("selected");
      }

      // Sélectionner la nouvelle carte
      cardElement.classList.add("selected");
      selectedCardId = cardElement.dataset.id;

      // Déterminer si c'est une carte bonus ou personnage
      const isBonus = cardElement.dataset.type === "bonus";

      if (isBonus) {
        // Si c'est une carte bonus, l'ajouter à la liste des bonus sélectionnés
        if (!selectedBonusCards.includes(selectedCardId)) {
          selectedBonusCards.push(selectedCardId);
        }
      } else {
        // Si c'est une carte personnage, réinitialiser la liste des bonus
        selectedBonusCards = [];
      }
    }
  });

  // Événement de clic sur les cartes de l'adversaire
  player2CardsContainer.addEventListener("click", (event) => {
    const cardElement = event.target.closest(".card");
    if (!cardElement || !isMyTurn) return;

    // Si une carte est déjà sélectionnée, la désélectionner
    const previousSelected =
      player2CardsContainer.querySelector(".card.selected");
    if (previousSelected) {
      previousSelected.classList.remove("selected-target");
    }

    // Sélectionner la nouvelle cible
    cardElement.classList.add("selected-target");
    selectedTargetId = cardElement.dataset.id;
  });

  // Événement de clic sur le bouton "Jouer Bonus"
  if (playBonusBtn) {
    playBonusBtn.addEventListener("click", playBonus);
  }

  // Événement de clic sur le bouton "Attaquer"
  if (attackBtn) {
    attackBtn.addEventListener("click", attack);
  }

  // Événement de clic sur le bouton "Terminer Tour"
  if (endTurnBtn) {
    endTurnBtn.addEventListener("click", endTurn);
  }
}

// Fonction pour afficher les cartes du joueur
function renderPlayerCards() {
  if (!player1CardsContainer) return;

  player1CardsContainer.innerHTML = "";

  playerCards.forEach((card) => {
    const cardElement = document.createElement("div");
    cardElement.classList.add("card");
    cardElement.dataset.id = card.id;
    cardElement.dataset.type = card.type;

    // Afficher la carte en fonction de son type
    if (card.type === "perso") {
      cardElement.innerHTML = `
        <div class="card-header">${card.nomcarteperso}</div>
        <img src="${card.imageUrl || `/stock/svg_perso/${card.id}.svg`}" alt="${
        card.nomcarteperso
      }">
        <div class="card-stats">
          <div class="stat">PV: ${card.pointsdevie}</div>
          <div class="stat">ATT: ${card.forceattaque}</div>
          <div class="stat">Tours: ${card.tourattaque}</div>
        </div>
        <div class="card-name">${card.nomdupouvoir}</div>
      `;
    } else {
      cardElement.innerHTML = `
        <div class="card-header">${card.nomcartebonus}</div>
        <img src="${card.imageUrl || `/stock/svg_bonus/${card.id}.svg`}" alt="${
        card.nomcartebonus
      }">
        <div class="card-stats">
          <div class="stat">Bonus: ${card.pourcentagebonus}%</div>
          <div class="stat">Tours: ${card.tourbonus}</div>
        </div>
        <div class="card-name">${card.nomdupouvoir}</div>
      `;
    }

    player1CardsContainer.appendChild(cardElement);
  });
}

// Fonction pour afficher les cartes de l'adversaire
function renderOpponentCards(cards) {
  if (!player2CardsContainer) return;

  player2CardsContainer.innerHTML = "";

  cards.forEach((card) => {
    const cardElement = document.createElement("div");
    cardElement.classList.add("card", "opponent-card");
    cardElement.dataset.id = card.id;
    cardElement.dataset.type = card.type;

    // Afficher la carte en fonction de son type
    if (card.type === "perso") {
      cardElement.innerHTML = `
        <div class="card-header">${card.nomcarteperso}</div>
        <img src="${card.imageUrl || `/stock/svg_perso/${card.id}.svg`}" alt="${
        card.nomcarteperso
      }">
        <div class="card-stats">
          <div class="stat">PV: ${card.pointsdevie}</div>
        </div>
        <div class="card-name">${card.nomdupouvoir}</div>
      `;
    } else {
      // Pour les cartes bonus de l'adversaire, on affiche juste le dos
      cardElement.innerHTML = `
        <div class="card-back">Carte Bonus Adversaire</div>
      `;
    }

    player2CardsContainer.appendChild(cardElement);
  });
}

// Fonction pour jouer un bonus
async function playBonus() {
  if (!isMyTurn || selectedBonusCards.length === 0 || !selectedCardId) {
    alert(
      "Vous devez sélectionner une carte bonus et une carte personnage cible."
    );
    return;
  }

  try {
    // Préparer les actions de bonus
    const bonusActions = selectedBonusCards.map((bonusId) => ({
      bonusId,
      targetId: selectedCardId,
    }));

    // Envoyer l'action au serveur
    const response = await fetch("/games/play", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        gameId,
        playerId,
        actions: {
          bonus: bonusActions,
          attack: null,
        },
      }),
    });

    const data = await response.json();

    if (data.success) {
      // Mettre à jour l'état du jeu
      updateGameState(data.gameState);

      // Réinitialiser les sélections
      selectedBonusCards = [];
      selectedCardId = null;

      // Désélectionner les cartes
      const selectedCards = document.querySelectorAll(".card.selected");
      selectedCards.forEach((card) => card.classList.remove("selected"));
    } else {
      alert("Erreur lors du jeu des bonus: " + data.message);
    }
  } catch (error) {
    console.error("Erreur lors du jeu des bonus:", error);
    alert("Erreur de connexion au serveur.");
  }
}

// Fonction pour attaquer
async function attack() {
  if (!isMyTurn || !selectedCardId || !selectedTargetId) {
    alert("Vous devez sélectionner une carte personnage et une cible.");
    return;
  }

  try {
    // Envoyer l'action au serveur
    const response = await fetch("/games/play", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        gameId,
        playerId,
        actions: {
          bonus: [],
          attack: {
            cardId: selectedCardId,
            targetId: selectedTargetId,
          },
        },
      }),
    });

    const data = await response.json();

    if (data.success) {
      // Mettre à jour l'état du jeu
      updateGameState(data.gameState);

      // Réinitialiser les sélections
      selectedCardId = null;
      selectedTargetId = null;

      // Désélectionner les cartes
      const selectedCards = document.querySelectorAll(
        ".card.selected, .card.selected-target"
      );
      selectedCards.forEach((card) => {
        card.classList.remove("selected");
        card.classList.remove("selected-target");
      });
    } else {
      alert("Erreur lors de l'attaque: " + data.message);
    }
  } catch (error) {
    console.error("Erreur lors de l'attaque:", error);
    alert("Erreur de connexion au serveur.");
  }
}

// Fonction pour terminer le tour
async function endTurn() {
  if (!isMyTurn) {
    alert("Ce n'est pas votre tour.");
    return;
  }

  try {
    // Envoyer l'action au serveur
    const response = await fetch("/games/play", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        gameId,
        playerId,
        actions: {
          bonus: [],
          attack: null,
          endTurn: true,
        },
      }),
    });

    const data = await response.json();

    if (data.success) {
      // Mettre à jour l'état du jeu
      updateGameState(data.gameState);

      // Indiquer que ce n'est plus notre tour
      isMyTurn = false;
      updateTurnIndicator();
    } else {
      alert("Erreur lors de la fin du tour: " + data.message);
    }
  } catch (error) {
    console.error("Erreur lors de la fin du tour:", error);
    alert("Erreur de connexion au serveur.");
  }
}

// Fonction pour mettre à jour l'état du jeu
function updateGameState(gameState) {
  if (!gameState) return;

  // Mettre à jour les informations du joueur
  if (gameState[playerKey]) {
    playerCards = gameState[playerKey].hand || [];
    renderPlayerCards();

    // Mettre à jour les statistiques des cartes
    updateCardStats(gameState[playerKey], player1CardsContainer);
  }

  // Mettre à jour les informations de l'adversaire
  const opponentKey = playerKey === "player1" ? "player2" : "player1";
  if (gameState[opponentKey]) {
    const opponentCards = gameState[opponentKey].hand || [];
    renderOpponentCards(opponentCards);

    // Mettre à jour les statistiques des cartes
    updateCardStats(gameState[opponentKey], player2CardsContainer);
  }

  // Mettre à jour l'indicateur de tour
  isMyTurn = gameState.currentPlayer === playerKey;
  updateTurnIndicator();

  // Vérifier si la partie est terminée
  if (gameState.gameOver) {
    const hasWon = gameState.winner === playerKey;
    alert(hasWon ? "Félicitations ! Vous avez gagné !" : "Vous avez perdu !");

    // Désactiver les boutons d'action
    isMyTurn = false;
    updateTurnIndicator();

    // Ajouter un bouton pour revenir au menu principal
    const backButton = document.createElement("button");
    backButton.textContent = "Retour au menu principal";
    backButton.className = "btn";
    backButton.addEventListener("click", () => {
      window.location.reload();
    });

    const gameControls = document.getElementById("game-controls");
    if (gameControls) {
      gameControls.appendChild(backButton);
    }
  }
}

// Fonction pour mettre à jour les statistiques des cartes
function updateCardStats(player, container) {
  if (!container) return;

  // Mettre à jour les points de vie des cartes
  Object.entries(player.health || {}).forEach(([cardId, health]) => {
    const cardElement = container.querySelector(`[data-id="${cardId}"]`);
    if (cardElement) {
      const pvElement = cardElement.querySelector(".stat:nth-child(1)");
      if (pvElement) {
        pvElement.textContent = `PV: ${health}`;

        // Appliquer un style visuel si les PV sont bas
        if (health < 30) {
          cardElement.classList.add("low-health");
        } else {
          cardElement.classList.remove("low-health");
        }
      }
    }
  });

  // Mettre à jour les tours d'attaque restants
  Object.entries(player.turns || {}).forEach(([cardId, turns]) => {
    const cardElement = container.querySelector(`[data-id="${cardId}"]`);
    if (cardElement) {
      const turnsElement = cardElement.querySelector(".stat:nth-child(3)");
      if (turnsElement) {
        turnsElement.textContent = `Tours: ${turns}`;

        // Appliquer un style visuel si les tours sont épuisés
        if (turns <= 0) {
          cardElement.classList.add("no-turns");
        } else {
          cardElement.classList.remove("no-turns");
        }
      }
    }
  });

  // Mettre à jour les bonus actifs
  Object.entries(player.activeBonus || {}).forEach(([cardId, bonusList]) => {
    const cardElement = container.querySelector(`[data-id="${cardId}"]`);
    if (cardElement && bonusList.length > 0) {
      // Ajouter un indicateur visuel de bonus actif
      cardElement.classList.add("has-bonus");

      // Optionnel : Afficher le nombre de bonus actifs
      const bonusIndicator = document.createElement("div");
      bonusIndicator.className = "bonus-indicator";
      bonusIndicator.textContent = `${bonusList.length} bonus`;

      // Remplacer l'ancien indicateur s'il existe
      const oldIndicator = cardElement.querySelector(".bonus-indicator");
      if (oldIndicator) {
        cardElement.replaceChild(bonusIndicator, oldIndicator);
      } else {
        cardElement.appendChild(bonusIndicator);
      }
    } else if (cardElement) {
      cardElement.classList.remove("has-bonus");
      const oldIndicator = cardElement.querySelector(".bonus-indicator");
      if (oldIndicator) {
        oldIndicator.remove();
      }
    }
  });
}

// Fonction pour générer un identifiant de joueur unique
function generatePlayerId() {
  // Utiliser un timestamp + valeur aléatoire pour l'unicité
  return `player_${Date.now()}_${Math.random().toString(36).substring(2, 7)}`;
}

// Configurer les événements pour les boutons du menu principal
if (createGameBtn) {
  createGameBtn.addEventListener("click", createGame);
}

if (joinGameBtn) {
  joinGameBtn.addEventListener("click", () => {
    const enteredGameId = gameIdInput.value.trim();
    if (!enteredGameId) {
      alert("Veuillez entrer un ID de partie valide.");
      return;
    }

    gameId = enteredGameId;
    playerId = generatePlayerId();

    joinGame();
  });
}

// Fonctions exposées globalement
window.gameController = {
  createGame,
  joinGame,
  playBonus,
  attack,
  endTurn,
};


===== /Users/robert/Victorryan/frontend/js/utils.js =====


===== /Users/robert/Victorryan/frontend/js/websocket.js =====
// Script pour gérer les connexions WebSocket dans le frontend
document.addEventListener("DOMContentLoaded", () => {
  // Connexion à Socket.io
  const socket = io();

  // Variables globales
  let gameId = null;
  let playerId = null;
  let isMyTurn = false;

  // Éléments du DOM
  const statusElement = document.getElementById("status");
  const gameIdDisplay = document.getElementById("game-id-display");
  const player1CardsContainer = document.getElementById("player1-cards");
  const player2CardsContainer = document.getElementById("player2-cards");
  const notificationArea = document.getElementById("notification-area");

  // Fonction pour afficher des notifications
  function showNotification(message, type = "info") {
    const notification = document.createElement("div");
    notification.className = `notification ${type}`;
    notification.textContent = message;

    notificationArea.appendChild(notification);

    // Supprimer la notification après 5 secondes
    setTimeout(() => {
      notification.remove();
    }, 5000);
  }

  // Événement lorsque la connexion est établie
  socket.on("connect", () => {
    console.log("Connecté au serveur WebSocket");
    statusElement.textContent = "Connecté";
    statusElement.className = "connected";
  });

  // Événement lorsque la connexion est perdue
  socket.on("disconnect", () => {
    console.log("Déconnecté du serveur WebSocket");
    statusElement.textContent = "Déconnecté";
    statusElement.className = "disconnected";
    showNotification(
      "La connexion au serveur a été perdue. Tentative de reconnexion...",
      "error"
    );
  });

  // Événement lorsqu'une partie commence
  socket.on("gameStarted", (data) => {
    console.log("Partie commencée:", data);
    gameIdDisplay.textContent = `Partie #${data.gameId}`;

    showNotification("La partie a commencé!", "success");

    // Mettre à jour l'interface en fonction du joueur actuel
    isMyTurn =
      data.currentPlayer ===
      (playerId === data.player1Id ? "player1" : "player2");
    updateTurnIndicator();
  });

  // Événement lorsqu'une carte est jouée par l'adversaire
  socket.on("cardPlayed", (data) => {
    console.log("Carte jouée par l'adversaire:", data);
    showNotification(
      `Votre adversaire a joué une carte: ${data.cardData.name}`
    );
    // Mettre à jour l'affichage des cartes
    updateGameBoard();
  });

  // Événement lorsque le tour change
  socket.on("turnChanged", (data) => {
    console.log("Tour changé:", data);

    // Mettre à jour l'interface
    const playerKey = playerId === data.player1Id ? "player1" : "player2";
    isMyTurn = data.currentPlayer === playerKey;

    showNotification(
      isMyTurn ? "C'est votre tour!" : "C'est le tour de votre adversaire"
    );
    updateTurnIndicator();
    updateGameBoard();
  });

  // Événement lorsque la partie se termine
  socket.on("gameOver", (data) => {
    console.log("Partie terminée:", data);

    const playerKey = playerId === data.player1Id ? "player1" : "player2";
    const hasWon = data.winner === playerKey;

    showNotification(
      hasWon
        ? "Félicitations! Vous avez gagné la partie!"
        : "Vous avez perdu la partie.",
      hasWon ? "success" : "error"
    );

    // Désactiver les contrôles de jeu
    isMyTurn = false;
    updateTurnIndicator();
    updateGameBoard();

    // Afficher un bouton pour revenir au menu principal
    const backToMenuBtn = document.createElement("button");
    backToMenuBtn.textContent = "Retour au menu principal";
    backToMenuBtn.className = "btn btn-primary";
    backToMenuBtn.addEventListener("click", () => {
      // Réinitialiser l'application
      window.location.reload();
    });

    document.getElementById("game-controls").appendChild(backToMenuBtn);
  });

  // Fonction pour rejoindre une partie
  function joinGame(gameIdToJoin, playerIdToUse) {
    gameId = gameIdToJoin;
    playerId = playerIdToUse;

    // Rejoindre la salle Socket.io pour cette partie
    socket.emit("joinGame", { gameId, playerId });

    // Mettre à jour l'interface
    gameIdDisplay.textContent = `Partie #${gameId}`;
    statusElement.textContent = "En attente d'un adversaire...";
    statusElement.className = "waiting";

    showNotification("Connexion à la partie en cours...");
  }

  // Fonction pour jouer une carte
  function playCard(cardId, targetId) {
    if (!isMyTurn) {
      showNotification("Ce n'est pas votre tour!", "error");
      return;
    }

    // Récupérer les détails de la carte à partir du DOM
    const cardElement = document.querySelector(`[data-id="${cardId}"]`);
    const cardData = {
      id: cardId,
      name: cardElement.querySelector(".card-name").textContent,
      type: cardElement.dataset.type,
    };

    // Envoyer l'action au serveur
    socket.emit("playCard", { gameId, playerId, cardData, targetId });

    showNotification(`Vous avez joué la carte ${cardData.name}`);
  }

  // Fonction pour terminer son tour
  function endTurn() {
    if (!isMyTurn) {
      showNotification("Ce n'est pas votre tour!", "error");
      return;
    }

    socket.emit("endTurn", { gameId, playerId });
    showNotification("Vous avez terminé votre tour");

    // Désactiver temporairement les contrôles de jeu
    isMyTurn = false;
    updateTurnIndicator();
  }

  // Fonction pour mettre à jour l'indicateur de tour
  function updateTurnIndicator() {
    const turnIndicator = document.getElementById("turn-indicator");
    if (!turnIndicator) return;

    turnIndicator.textContent = isMyTurn
      ? "C'est votre tour"
      : "Tour de l'adversaire";
    turnIndicator.className = isMyTurn ? "your-turn" : "opponent-turn";

    // Mettre à jour l'état des boutons
    const actionButtons = document.querySelectorAll(".action-btn");
    actionButtons.forEach((btn) => {
      btn.disabled = !isMyTurn;
    });
  }

  // Fonction pour mettre à jour l'affichage du plateau de jeu
  function updateGameBoard() {
    // Cette fonction devrait être implémentée pour mettre à jour l'affichage
    // des cartes et de l'état du jeu en fonction des données reçues du serveur

    // Pour l'instant, c'est juste un espace réservé
    console.log("Mise à jour du plateau de jeu");
  }

  // Exposer les fonctions utiles globalement
  window.gameSocket = {
    joinGame,
    playCard,
    endTurn,
  };
});


===== /Users/robert/Victorryan/stock/svg_bonus/B1.svg =====
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   width="210mm"
   height="297mm"
   viewBox="0 0 210 297"
   version="1.1"
   id="svg1"
   xml:space="preserve"
   sodipodi:docname="modele_carte_bonus.svg"
   inkscape:version="1.4 (e7c3feb1, 2024-10-09)"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:xlink="http://www.w3.org/1999/xlink"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg"><sodipodi:namedview
     id="namedview1"
     pagecolor="#ffffff"
     bordercolor="#666666"
     borderopacity="1.0"
     inkscape:showpageshadow="2"
     inkscape:pageopacity="0.0"
     inkscape:pagecheckerboard="0"
     inkscape:deskcolor="#d1d1d1"
     inkscape:document-units="mm"
     inkscape:zoom="0.35078513"
     inkscape:cx="200.97773"
     inkscape:cy="655.67203"
     inkscape:window-width="1440"
     inkscape:window-height="771"
     inkscape:window-x="0"
     inkscape:window-y="25"
     inkscape:window-maximized="0"
     inkscape:current-layer="svg1" /><defs
     id="defs1"><linearGradient
       id="linearGradient51"><stop
         style="stop-color:#000000;stop-opacity:1;"
         offset="0.06190476"
         id="stop51" /><stop
         style="stop-color:#000000;stop-opacity:0;"
         offset="1"
         id="stop52" /></linearGradient><rect
       x="98.533171"
       y="884.06151"
       width="593.93606"
       height="169.69602"
       id="rect11" /><linearGradient
       id="swatch6"><stop
         style="stop-color:#fdfdfd;stop-opacity:0.99450547;"
         offset="0"
         id="stop6" /></linearGradient><rect
       x="125.9035"
       y="328.4439"
       width="678.78407"
       height="76.636911"
       id="rect6" /><rect
       x="78.825252"
       y="396.04883"
       width="647.90512"
       height="115.35403"
       id="rect5" /><rect
       x="249.93373"
       y="267.23683"
       width="405.66166"
       height="157.6505"
       id="rect4" /><rect
       x="151.8828"
       y="257.62399"
       width="384.51342"
       height="107.66376"
       id="rect3" /><linearGradient
       id="swatch1"><stop
         style="stop-color:#f7f7f7;stop-opacity:1;"
         offset="0"
         id="stop1" /></linearGradient><rect
       x="549.58742"
       y="61.61294"
       width="167.5872"
       height="61.61294"
       id="rect1" /><rect
       x="125.9035"
       y="328.44391"
       width="678.78406"
       height="76.636909"
       id="rect6-2" /><rect
       x="125.9035"
       y="328.4439"
       width="678.78407"
       height="76.636911"
       id="rect43" /><rect
       x="98.533173"
       y="884.06152"
       width="593.93604"
       height="169.69601"
       id="rect11-7" /><filter
       style="color-interpolation-filters:sRGB"
       id="filter44"
       x="-0.024019204"
       y="-0.054043208"
       width="1.0480384"
       height="1.1080864"><feGaussianBlur
         stdDeviation="0.71522277"
         id="feGaussianBlur44" /></filter><linearGradient
       xlink:href="#swatch6"
       id="linearGradient44"
       gradientUnits="userSpaceOnUse"
       x1="142.52386"
       y1="353.92313"
       x2="788.47809"
       y2="353.92313" /><filter
       style="color-interpolation-filters:sRGB"
       id="filter44-6"
       x="-0.011965486"
       y="-0.026922343"
       width="1.023931"
       height="1.0538447"><feGaussianBlur
         stdDeviation="0.32859227"
         id="feGaussianBlur44-0" /></filter><linearGradient
       xlink:href="#swatch1"
       id="linearGradient45"
       gradientUnits="userSpaceOnUse"
       x1="621.4578"
       y1="71.095479"
       x2="645.38859"
       y2="71.095479" /><linearGradient
       xlink:href="#linearGradient51"
       id="linearGradient52"
       x1="613.84485"
       y1="73.543671"
       x2="652.59888"
       y2="73.543671"
       gradientUnits="userSpaceOnUse" /><rect
       x="98.533173"
       y="884.06152"
       width="593.93604"
       height="169.69601"
       id="rect11-3" /><rect
       x="98.533173"
       y="884.06152"
       width="593.93604"
       height="169.69601"
       id="rect11-3-9" /><rect
       x="98.533173"
       y="884.06152"
       width="593.93604"
       height="169.69601"
       id="rect11-3-2" /></defs><image
     width="196.85001"
     height="274.9021"
     preserveAspectRatio="none"
     style="image-rendering:optimizeQuality"
     xlink:href="https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/1.png"
     id="fond"
     x="-1.2579868"
     y="3.8393686"
     transform="translate(7.8402998,5.8802249)" /><rect
     style="opacity:0.60848287;fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:0.264999;stroke-dasharray:none;stroke-opacity:1;paint-order:stroke markers fill;filter:url(#filter44-6)"
     id="rect44-9"
     width="76.981491"
     height="34.213997"
     x="15.618582"
     y="241.78484"
     rx="3.5377965"
     ry="4.4017787"
     transform="matrix(2.2850488,0,0,1.1514459,-19.683474,-36.117377)" /><rect
     style="opacity:0.591479;fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:0.264999;stroke-dasharray:none;stroke-opacity:1;paint-order:stroke markers fill;filter:url(#filter44)"
     id="rect44"
     width="76.981491"
     height="34.213997"
     x="15.618582"
     y="241.78484"
     rx="3.5377965"
     ry="4.4017787"
     transform="matrix(2.2850488,0,0,0.6028572,-20.070639,96.023105)" /><text
     xml:space="preserve"
     transform="matrix(0.26458333,0,0,0.26458333,-18.109057,158.67821)"
     id="nomcartebonus"
     style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:48px;line-height:1.25;font-family:'Geometr415 Blk BT';-inkscape-font-specification:'Geometr415 Blk BT, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:center;letter-spacing:0px;word-spacing:0px;white-space:pre;shape-inside:url(#rect6);display:inline;fill:url(#linearGradient44)"><tspan
       x="344.66309"
       y="370.91211"
       id="tspan6">Artefact Mystique</tspan></text><text
     xml:space="preserve"
     transform="matrix(0.26458333,0,0,0.26458333,-3.9292871,39.298688)"
     id="description"
     style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:21.3333px;line-height:1.25;font-family:'Geometr415 Blk BT';-inkscape-font-specification:'Geometr415 Blk BT, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:center;letter-spacing:0px;word-spacing:0px;white-space:pre;shape-inside:url(#rect11);display:inline;opacity:1;mix-blend-mode:normal;fill:#ffffff;fill-opacity:1"><tspan
       x="222.94396"
       y="902.93747"
       id="tspan7">Augmente temporairement la puissance cosmique</tspan></text><text
     xml:space="preserve"
     transform="matrix(0.26458333,0,0,0.26458333,-80.384287,31.348086)"
     id="pourcentagebonus"
     style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:32px;line-height:1.25;font-family:'Geometr415 Blk BT';-inkscape-font-specification:'Geometr415 Blk BT, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:center;letter-spacing:0px;word-spacing:0px;white-space:pre;shape-inside:url(#rect11-3);display:inline;mix-blend-mode:normal;fill:#ffffff;fill-opacity:1"><tspan
       x="376.96973"
       y="912.375"
       id="tspan8">20</tspan></text><text
     xml:space="preserve"
     transform="matrix(0.26458333,0,0,0.26458333,-69.420405,31.362329)"
     id="tourbonus"
     style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:32px;line-height:1.25;font-family:'Geometr415 Blk BT';-inkscape-font-specification:'Geometr415 Blk BT, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:center;letter-spacing:0px;word-spacing:0px;white-space:pre;shape-inside:url(#rect11-3-2);display:inline;mix-blend-mode:normal;fill:#ffffff;fill-opacity:1"><tspan
       x="386.23535"
       y="912.375"
       id="tspan9">2</tspan></text><text
     xml:space="preserve"
     transform="matrix(0.26458333,0,0,0.26458333,-3.7553913,30.684851)"
     id="nomdupouvoir"
     style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:29.3333px;line-height:1.25;font-family:'Geometr415 Blk BT';-inkscape-font-specification:'Geometr415 Blk BT, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:center;letter-spacing:0px;word-spacing:0px;white-space:pre;shape-inside:url(#rect11-7);display:inline;mix-blend-mode:normal;fill:#ffffff;fill-opacity:1"><tspan
       x="214.46668"
       y="910.0156"
       id="tspan10">NECTAR COSMIQUE</tspan></text><g
     id="layer2" /></svg>


===== /Users/robert/Victorryan/stock/svg_perso/P1.svg =====
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   width="196.85001mm"
   height="274.90207mm"
   viewBox="0 0 196.85001 274.90207"
   version="1.1"
   id="svg1"
   xml:space="preserve"
   inkscape:version="1.4 (e7c3feb1, 2024-10-09)"
   sodipodi:docname="modele_carte.svg"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:xlink="http://www.w3.org/1999/xlink"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg"><sodipodi:namedview
     id="namedview1"
     pagecolor="#ffffff"
     bordercolor="#666666"
     borderopacity="1.0"
     inkscape:showpageshadow="2"
     inkscape:pageopacity="0.0"
     inkscape:pagecheckerboard="0"
     inkscape:deskcolor="#d1d1d1"
     inkscape:document-units="mm"
     inkscape:zoom="0.34735604"
     inkscape:cx="355.54297"
     inkscape:cy="434.71246"
     inkscape:window-width="1440"
     inkscape:window-height="771"
     inkscape:window-x="0"
     inkscape:window-y="25"
     inkscape:window-maximized="0"
     inkscape:current-layer="svg1" /><defs
     id="defs1"><linearGradient
       id="swatch3"
       inkscape:swatch="solid"><stop
         style="stop-color:#000000;stop-opacity:1;"
         offset="0"
         id="stop3" /></linearGradient><linearGradient
       id="swatch2"
       inkscape:swatch="solid"><stop
         style="stop-color:#ffffff;stop-opacity:1;"
         offset="0"
         id="stop2" /></linearGradient><linearGradient
       id="linearGradient51"
       inkscape:collect="always"><stop
         style="stop-color:#000000;stop-opacity:1;"
         offset="0.06190476"
         id="stop51" /><stop
         style="stop-color:#000000;stop-opacity:0;"
         offset="1"
         id="stop52" /></linearGradient><rect
       x="98.533173"
       y="884.06152"
       width="593.93604"
       height="169.69601"
       id="rect11" /><linearGradient
       id="swatch6"
       inkscape:swatch="solid"><stop
         style="stop-color:#fdfdfd;stop-opacity:0.99450547;"
         offset="0"
         id="stop6" /></linearGradient><rect
       x="125.9035"
       y="328.44391"
       width="678.78406"
       height="76.636909"
       id="rect6" /><rect
       x="78.825249"
       y="396.04883"
       width="647.90509"
       height="115.35403"
       id="rect5" /><rect
       x="249.93373"
       y="267.23682"
       width="405.66165"
       height="157.6505"
       id="rect4" /><rect
       x="151.8828"
       y="257.62399"
       width="384.51343"
       height="107.66376"
       id="rect3" /><linearGradient
       id="swatch1"
       inkscape:swatch="solid"><stop
         style="stop-color:#ffffff;stop-opacity:1;"
         offset="0"
         id="stop1" /></linearGradient><rect
       x="549.5874"
       y="61.612942"
       width="167.5872"
       height="61.612942"
       id="rect1" /><rect
       x="125.9035"
       y="328.44391"
       width="678.78406"
       height="76.636909"
       id="rect6-2" /><rect
       x="125.9035"
       y="328.44391"
       width="678.78406"
       height="76.636909"
       id="rect43" /><rect
       x="98.533173"
       y="884.06152"
       width="593.93604"
       height="169.69601"
       id="rect11-7" /><filter
       inkscape:collect="always"
       style="color-interpolation-filters:sRGB"
       id="filter44"
       x="-0.024019204"
       y="-0.054043208"
       width="1.0480384"
       height="1.1080864"><feGaussianBlur
         inkscape:collect="always"
         stdDeviation="0.71522277"
         id="feGaussianBlur44" /></filter><filter
       inkscape:collect="always"
       style="color-interpolation-filters:sRGB"
       id="filter44-6"
       x="-0.024019204"
       y="-0.054043208"
       width="1.0480384"
       height="1.1080864"><feGaussianBlur
         inkscape:collect="always"
         stdDeviation="0.71522277"
         id="feGaussianBlur44-0" /></filter><linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient51"
       id="linearGradient52"
       x1="613.84485"
       y1="73.543671"
       x2="652.59888"
       y2="73.543671"
       gradientUnits="userSpaceOnUse" /><rect
       x="98.533173"
       y="884.06152"
       width="593.93604"
       height="169.69601"
       id="rect11-3" /><rect
       x="98.533173"
       y="884.06152"
       width="593.93604"
       height="169.69601"
       id="rect11-3-9" /><rect
       x="98.533173"
       y="884.06152"
       width="593.93604"
       height="169.69601"
       id="rect11-3-2" /><linearGradient
       inkscape:collect="always"
       xlink:href="#swatch6"
       id="linearGradient16"
       gradientUnits="userSpaceOnUse"
       x1="142.52386"
       y1="353.92313"
       x2="788.47809"
       y2="353.92313" /><linearGradient
       inkscape:collect="always"
       xlink:href="#swatch2"
       id="linearGradient2"
       x1="616.23093"
       y1="73.532703"
       x2="652.09885"
       y2="73.532703"
       gradientUnits="userSpaceOnUse" /><linearGradient
       inkscape:collect="always"
       xlink:href="#swatch3"
       id="linearGradient3"
       x1="-1.2579868"
       y1="141.29042"
       x2="195.59202"
       y2="141.29042"
       gradientUnits="userSpaceOnUse" /></defs><image
     width="196.85001"
     height="274.9021"
     preserveAspectRatio="none"
     style="image-rendering:optimizeQuality;stroke:url(#linearGradient3);stroke-opacity:1"
     xlink:href="https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/1.png"
     id="fond"
     x="-1.2579868"
     y="3.8393686"
     inkscape:svg-dpi="96"
     transform="translate(1.2579868,-3.8393685)" /><rect
     style="opacity:0.30314465;fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:0.264999;stroke-dasharray:none;stroke-opacity:1;paint-order:stroke markers fill;filter:url(#filter44-6)"
     id="rect44-9"
     width="76.981491"
     height="34.213997"
     x="15.618582"
     y="241.78484"
     rx="3.5377965"
     ry="4.4017787"
     transform="matrix(2.2850488,0,0,1.1514459,-26.265787,-45.83697)" /><rect
     style="opacity:0.591479;fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:0.264999;stroke-dasharray:none;stroke-opacity:1;paint-order:stroke markers fill;filter:url(#filter44)"
     id="rect44"
     width="76.981491"
     height="34.213997"
     x="15.618582"
     y="241.78484"
     rx="3.5377965"
     ry="4.4017787"
     transform="matrix(2.2850488,0,0,0.6028572,-26.652953,86.303511)" /><text
     xml:space="preserve"
     transform="matrix(0.41687604,0,0,0.53275643,-85.06201,-26.760906)"
     id="pointsdevie"
     style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:22.4572px;line-height:1.25;font-family:'Geometr415 Blk BT';-inkscape-font-specification:'Geometr415 Blk BT, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:center;letter-spacing:0px;word-spacing:0px;white-space:pre;shape-inside:url(#rect1);display:inline;fill:#ffffff;fill-opacity:1;stroke:none;stroke-width:1.90974196;stroke-dasharray:none;stroke-dashoffset:0"
     inkscape:label="pointsdevie"><tspan
       x="613.87336"
       y="81.482639"
       id="tspan7">100</tspan></text><text
     xml:space="preserve"
     transform="matrix(0.26458333,0,0,0.26458333,-24.69137,148.95862)"
     id="nomcarteperso"
     style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:40px;line-height:1.25;font-family:'Geometr415 Blk BT';-inkscape-font-specification:'Geometr415 Blk BT, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:center;letter-spacing:0px;word-spacing:0px;white-space:pre;shape-inside:url(#rect6);display:inline;fill:url(#linearGradient16)"
     inkscape:label="nomcarteperso"><tspan
       x="381.94629"
       y="363.83398"
       id="tspan8">ZEPHYR</tspan></text><text
     xml:space="preserve"
     transform="matrix(0.26458333,0,0,0.26458333,-9.2619708,29.995638)"
     id="description"
     style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:21.3333px;line-height:1.25;font-family:'Geometr415 Blk BT';-inkscape-font-specification:'Geometr415 Blk BT, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:center;letter-spacing:0px;word-spacing:0px;white-space:pre;shape-inside:url(#rect11);display:inline;opacity:1;mix-blend-mode:normal;fill:#ffffff;fill-opacity:1"
     inkscape:label="description"><tspan
       x="190.73567"
       y="902.93747"
       id="tspan9">Inflige une tempête violente à l'ennemi</tspan></text><text
     xml:space="preserve"
     transform="matrix(0.26458333,0,0,0.26458333,-87.308703,20.535223)"
     id="forceattaque"
     style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:32px;line-height:1.25;font-family:'Geometr415 Blk BT';-inkscape-font-specification:'Geometr415 Blk BT, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:center;letter-spacing:0px;word-spacing:0px;white-space:pre;shape-inside:url(#rect11-3);display:inline;mix-blend-mode:normal;fill:#ffffff;fill-opacity:1"
     inkscape:label="forceattaque"><tspan
       x="376.96973"
       y="912.375"
       id="tspan10">30</tspan></text><text
     xml:space="preserve"
     transform="matrix(0.26458333,0,0,0.26458333,-75.928275,20.549466)"
     id="tourattaque"
     style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:32px;line-height:1.25;font-family:'Geometr415 Blk BT';-inkscape-font-specification:'Geometr415 Blk BT, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:center;letter-spacing:0px;word-spacing:0px;white-space:pre;shape-inside:url(#rect11-3-2);display:inline;mix-blend-mode:normal;fill:#ffffff;fill-opacity:1"
     inkscape:label="tourattaque"><tspan
       x="386.23535"
       y="912.375"
       id="tspan11">2</tspan></text><text
     xml:space="preserve"
     transform="matrix(0.26458333,0,0,0.26458333,-10.337704,20.593047)"
     id="nomdupouvoir"
     style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:24px;line-height:1.25;font-family:'Geometr415 Blk BT';-inkscape-font-specification:'Geometr415 Blk BT, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:center;letter-spacing:0px;word-spacing:0px;white-space:pre;shape-inside:url(#rect11-7);display:inline;mix-blend-mode:normal;fill:#ffffff;fill-opacity:1"
     inkscape:label="nomdupouvoir"><tspan
       x="282.7959"
       y="905.29688"
       id="tspan12">Tempête Déchaînée</tspan></text></svg>


===== /Users/robert/Victorryan/stock/bonus.json =====
[
    {
        "id": "B1",
        "nomcartebonus": "Artefact Mystique",
        "pourcentagebonus": "20",
        "tourbonus": "2",
        "nomdupouvoir": "NECTAR COSMIQUE",
        "description": "Augmente temporairement la puissance cosmique",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/1.png"
    },
    {
        "id": "B2",
        "nomcartebonus": "Artefact Mystique",
        "pourcentagebonus": "20",
        "tourbonus": "2",
        "nomdupouvoir": "NECTAR COSMIQUE",
        "description": "Augmente temporairement la puissance cosmique",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/2.png"
    },
    {
        "id": "B3",
        "nomcartebonus": "Reliques du Savoir Perdu",
        "pourcentagebonus": "15",
        "tourbonus": "2",
        "nomdupouvoir": "Invocation des Secrets Anciens",
        "description": "Augmente temporairement les connaissances stratégiques",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/3.png"
    },
    {
        "id": "B4",
        "nomcartebonus": "Reliques du Savoir Perdu",
        "pourcentagebonus": "15",
        "tourbonus": "2",
        "nomdupouvoir": "Invocation des Secrets Anciens",
        "description": "Augmente temporairement les connaissances stratégiques",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/4.png"
    },
    {
        "id": "B5",
        "nomcartebonus": "Les Chroniques Sablesques",
        "pourcentagebonus": "10",
        "tourbonus": "1",
        "nomdupouvoir": "Révélation Sablée",
        "description": "Révèle une vérité cachée",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/5.png"
    },
    {
        "id": "B6",
        "nomcartebonus": "Les Chroniques Sablesques",
        "pourcentagebonus": "10",
        "tourbonus": "1",
        "nomdupouvoir": "Révélation Sablée",
        "description": "Révèle une vérité cachée",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/6.png"
    },
    {
        "id": "B7",
        "nomcartebonus": "Épée du Destin Ancien",
        "pourcentagebonus": "25",
        "tourbonus": "2",
        "nomdupouvoir": "Coup d'Éternité",
        "description": "Inflige une frappe intemporelle",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/7.png"
    },
    {
        "id": "B8",
        "nomcartebonus": "Épée du Destin Ancien",
        "pourcentagebonus": "25",
        "tourbonus": "2",
        "nomdupouvoir": "Coup d'Éternité",
        "description": "Inflige une frappe intemporelle",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/8.png"
    },
    {
        "id": "B9",
        "nomcartebonus": "Intrusion Systémique",
        "pourcentagebonus": "20",
        "tourbonus": "2",
        "nomdupouvoir": "Chaos Numérique",
        "description": "Perturbe les systèmes ennemis",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/9.png"
    },
    {
        "id": "B10",
        "nomcartebonus": "Intrusion Systémique",
        "pourcentagebonus": "20",
        "tourbonus": "2",
        "nomdupouvoir": "Chaos Numérique",
        "description": "Perturbe les systèmes ennemis",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/10.png"
    },
    {
        "id": "B11",
        "nomcartebonus": "Portail de l'Inconnu",
        "pourcentagebonus": "15",
        "tourbonus": "2",
        "nomdupouvoir": "Passage Fracturé",
        "description": "Crée une brèche dimensionnelle",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/11.png"
    },
    {
        "id": "B12",
        "nomcartebonus": "Portail de l'Inconnu",
        "pourcentagebonus": "15",
        "tourbonus": "2",
        "nomdupouvoir": "Passage Fracturé",
        "description": "Crée une brèche dimensionnelle",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/12.png"
    },
    {
        "id": "B13",
        "nomcartebonus": "Baguette Arcano-Technologique",
        "pourcentagebonus": "20",
        "tourbonus": "2",
        "nomdupouvoir": "Éclat Technomagique",
        "description": "Projette une onde technologique",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/13.png"
    },
    {
        "id": "B14",
        "nomcartebonus": "Baguette Arcano-Technologique",
        "pourcentagebonus": "20",
        "tourbonus": "2",
        "nomdupouvoir": "Éclat Technomagique",
        "description": "Projette une onde technologique",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/14.png"
    },
    {
        "id": "B15",
        "nomcartebonus": "Mutant Écailleux",
        "pourcentagebonus": "25",
        "tourbonus": "3",
        "nomdupouvoir": "Régénération Mutante",
        "description": "Se régénère rapidement après des attaques",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/15.png"
    },
    {
        "id": "B16",
        "nomcartebonus": "Mutant Écailleux",
        "pourcentagebonus": "25",
        "tourbonus": "3",
        "nomdupouvoir": "Régénération Mutante",
        "description": "Se régénère rapidement après des attaques",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/16.png"
    },
    {
        "id": "B17",
        "nomcartebonus": "Rêve Fragmenté",
        "pourcentagebonus": "15",
        "tourbonus": "2",
        "nomdupouvoir": "Distorsion Mentale",
        "description": "Perturbe la conscience ennemie",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/17.png"
    },
    {
        "id": "B18",
        "nomcartebonus": "Rêve Fragmenté",
        "pourcentagebonus": "15",
        "tourbonus": "2",
        "nomdupouvoir": "Distorsion Mentale",
        "description": "Perturbe la conscience ennemie",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/18.png"
    },
    {
        "id": "B19",
        "nomcartebonus": "Âme Errante",
        "pourcentagebonus": "20",
        "tourbonus": "2",
        "nomdupouvoir": "Appel des Ancêtres",
        "description": "Invoque les forces des anciens",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/19.png"
    },
    {
        "id": "B20",
        "nomcartebonus": "Âme Errante",
        "pourcentagebonus": "20",
        "tourbonus": "2",
        "nomdupouvoir": "Appel des Ancêtres",
        "description": "Invoque les forces des anciens",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/20.png"
    },
    {
        "id": "B21",
        "nomcartebonus": "Gardien Sylvestre",
        "pourcentagebonus": "25",
        "tourbonus": "2",
        "nomdupouvoir": "Souffle d'Ambroisie",
        "description": "Restaure l'énergie vitale",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/21.png"
    },
    {
        "id": "B22",
        "nomcartebonus": "Gardien Sylvestre",
        "pourcentagebonus": "25",
        "tourbonus": "2",
        "nomdupouvoir": "Souffle d'Ambroisie",
        "description": "Restaure l'énergie vitale",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/22.png"
    },
    {
        "id": "B23",
        "nomcartebonus": "Talisman des Âges",
        "pourcentagebonus": "20",
        "tourbonus": "2",
        "nomdupouvoir": "Éveil Ancestral",
        "description": "Accroît la puissance spirituelle",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/23.png"
    },
    {
        "id": "B24",
        "nomcartebonus": "Talisman des Âges",
        "pourcentagebonus": "20",
        "tourbonus": "2",
        "nomdupouvoir": "Éveil Ancestral",
        "description": "Accroît la puissance spirituelle",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/24.png"
    },
    {
        "id": "B25",
        "nomcartebonus": "Grimoire des Secrets",
        "pourcentagebonus": "15",
        "tourbonus": "1",
        "nomdupouvoir": "Page Maudite",
        "description": "Inflige une malédiction temporaire",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/25.png"
    },
    {
        "id": "B26",
        "nomcartebonus": "Grimoire des Secrets",
        "pourcentagebonus": "15",
        "tourbonus": "1",
        "nomdupouvoir": "Page Maudite",
        "description": "Inflige une malédiction temporaire",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/26.png"
    },
    {
        "id": "B27",
        "nomcartebonus": "Clé des Mondes Cachés",
        "pourcentagebonus": "15",
        "tourbonus": "2",
        "nomdupouvoir": "Passage Interdit",
        "description": "Ouvre une dimension secrète",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/27.png"
    },
    {
        "id": "B28",
        "nomcartebonus": "Clé des Mondes Cachés",
        "pourcentagebonus": "15",
        "tourbonus": "2",
        "nomdupouvoir": "Passage Interdit",
        "description": "Ouvre une dimension secrète",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/28.png"
    },
    {
        "id": "B29",
        "nomcartebonus": "Masque des Esprits",
        "pourcentagebonus": "20",
        "tourbonus": "2",
        "nomdupouvoir": "Chant des Anciens",
        "description": "Augmente temporairement la concentration",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/29.png"
    },
    {
        "id": "B30",
        "nomcartebonus": "Masque des Esprits",
        "pourcentagebonus": "20",
        "tourbonus": "2",
        "nomdupouvoir": "Chant des Anciens",
        "description": "Augmente temporairement la concentration",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/30.png"
    },
    {
        "id": "B31",
        "nomcartebonus": "Sceptre de la Foudre Divine",
        "pourcentagebonus": "25",
        "tourbonus": "3",
        "nomdupouvoir": "Impact Fulgurant",
        "description": "Déchaîne une énergie céleste",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/31.png"
    },
    {
        "id": "B32",
        "nomcartebonus": "Sceptre de la Foudre Divine",
        "pourcentagebonus": "25",
        "tourbonus": "3",
        "nomdupouvoir": "Impact Fulgurant",
        "description": "Déchaîne une énergie céleste",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/32.png"
    },
    {
        "id": "B33",
        "nomcartebonus": "Lanterne du Voyageur Perdu",
        "pourcentagebonus": "15",
        "tourbonus": "2",
        "nomdupouvoir": "Lueur Guidante",
        "description": "Éclaire les chemins inconnus",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/33.png"
    },
    {
        "id": "B34",
        "nomcartebonus": "Lanterne du Voyageur Perdu",
        "pourcentagebonus": "15",
        "tourbonus": "2",
        "nomdupouvoir": "Lueur Guidante",
        "description": "Éclaire les chemins inconnus",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/34.png"
    },
    {
        "id": "B35",
        "nomcartebonus": "Anneau du Destin Brisé",
        "pourcentagebonus": "20",
        "tourbonus": "2",
        "nomdupouvoir": "Cercle du Chaos",
        "description": "Modifie la trajectoire du destin",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/35.png"
    },
    {
        "id": "B36",
        "nomcartebonus": "Anneau du Destin Brisé",
        "pourcentagebonus": "20",
        "tourbonus": "2",
        "nomdupouvoir": "Cercle du Chaos",
        "description": "Modifie la trajectoire du destin",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/36.png"
    },
    {
        "id": "B37",
        "nomcartebonus": "Prisme des Réalités Alternatives",
        "pourcentagebonus": "20",
        "tourbonus": "2",
        "nomdupouvoir": "Miroir Distordu",
        "description": "Confond l'ennemi avec des illusions",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/37.png"
    },
    {
        "id": "B38",
        "nomcartebonus": "Prisme des Réalités Alternatives",
        "pourcentagebonus": "20",
        "tourbonus": "2",
        "nomdupouvoir": "Miroir Distordu",
        "description": "Confond l'ennemi avec des illusions",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/38.png"
    },
    {
        "id": "B39",
        "nomcartebonus": "Bouclier des Titans Perdus",
        "pourcentagebonus": "30",
        "tourbonus": "3",
        "nomdupouvoir": "Barrière Primordiale",
        "description": "Absorbe une grande quantité de dégâts",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/39.png"
    },
    {
        "id": "B40",
        "nomcartebonus": "Bouclier des Titans Perdus",
        "pourcentagebonus": "30",
        "tourbonus": "3",
        "nomdupouvoir": "Barrière Primordiale",
        "description": "Absorbe une grande quantité de dégâts",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/40.png"
    },
    {
        "id": "B41",
        "nomcartebonus": "Corne de l'Oracle Antique",
        "pourcentagebonus": "20",
        "tourbonus": "2",
        "nomdupouvoir": "Prophétie d'Éternité",
        "description": "Anticipe les mouvements ennemis",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/41.png"
    },
    {
        "id": "B42",
        "nomcartebonus": "Corne de l'Oracle Antique",
        "pourcentagebonus": "20",
        "tourbonus": "2",
        "nomdupouvoir": "Prophétie d'Éternité",
        "description": "Anticipe les mouvements ennemis",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/42.png"
    },
    {
        "id": "B43",
        "nomcartebonus": "Plume de l'Aigle Céleste",
        "pourcentagebonus": "15",
        "tourbonus": "2",
        "nomdupouvoir": "Vol du Destin",
        "description": "Augmente l'agilité temporairement",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/43.png"
    },
    {
        "id": "B44",
        "nomcartebonus": "Plume de l'Aigle Céleste",
        "pourcentagebonus": "15",
        "tourbonus": "2",
        "nomdupouvoir": "Vol du Destin",
        "description": "Augmente l'agilité temporairement",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/44.png"
    },
    {
        "id": "B45",
        "nomcartebonus": "Statuette du Sage Perdu",
        "pourcentagebonus": "20",
        "tourbonus": "2",
        "nomdupouvoir": "Savoir Éternel",
        "description": "Améliore la compréhension magique",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/45.png"
    },
    {
        "id": "B46",
        "nomcartebonus": "Statuette du Sage Perdu",
        "pourcentagebonus": "20",
        "tourbonus": "2",
        "nomdupouvoir": "Savoir Éternel",
        "description": "Améliore la compréhension magique",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/46.png"
    },
    {
        "id": "B47",
        "nomcartebonus": "Orbe des Illusions Oubliées",
        "pourcentagebonus": "20",
        "tourbonus": "2",
        "nomdupouvoir": "Reflet Trompeur",
        "description": "Désoriente l'ennemi",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/47.png"
    },
    {
        "id": "B48",
        "nomcartebonus": "Orbe des Illusions Oubliées",
        "pourcentagebonus": "20",
        "tourbonus": "2",
        "nomdupouvoir": "Reflet Trompeur",
        "description": "Désoriente l'ennemi",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/48.png"
    },
    {
        "id": "B49",
        "nomcartebonus": "Casque du Guerrier Éthéréen",
        "pourcentagebonus": "25",
        "tourbonus": "3",
        "nomdupouvoir": "Voix des Anciens",
        "description": "Renforce le courage et la détermination",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/49.png"
    },
    {
        "id": "B50",
        "nomcartebonus": "Casque du Guerrier Éthéréen",
        "pourcentagebonus": "25",
        "tourbonus": "3",
        "nomdupouvoir": "Voix des Anciens",
        "description": "Renforce le courage et la détermination",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/50.png"
    },
    {
        "id": "B51",
        "nomcartebonus": "Anneau du Destin Oublié",
        "pourcentagebonus": "15",
        "tourbonus": "3",
        "nomdupouvoir": "Révélation Cachée",
        "description": "Augmente les chances de critique",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/51.png"
    },
    {
        "id": "B52",
        "nomcartebonus": "Anneau du Destin Oublié",
        "pourcentagebonus": "15",
        "tourbonus": "3",
        "nomdupouvoir": "Révélation Cachée",
        "description": "Augmente les chances de critique",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/52.png"
    },
    {
        "id": "B53",
        "nomcartebonus": "Corne du Léviathan Ancien",
        "pourcentagebonus": "25",
        "tourbonus": "2",
        "nomdupouvoir": "Rugissement Abyssal",
        "description": "Diminue la défense des ennemis",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/53.png"
    },
    {
        "id": "B54",
        "nomcartebonus": "Corne du Léviathan Ancien",
        "pourcentagebonus": "25",
        "tourbonus": "2",
        "nomdupouvoir": "Rugissement Abyssal",
        "description": "Diminue la défense des ennemis",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/54.png"
    },
    {
        "id": "B55",
        "nomcartebonus": "Cristal de Lune Éclatante",
        "pourcentagebonus": "20",
        "tourbonus": "3",
        "nomdupouvoir": "Énergie Lunaire",
        "description": "Restaure progressivement la vie",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/55.png"
    },
    {
        "id": "B56",
        "nomcartebonus": "Cristal de Lune Éclatante",
        "pourcentagebonus": "20",
        "tourbonus": "3",
        "nomdupouvoir": "Énergie Lunaire",
        "description": "Restaure progressivement la vie",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/56.png"
    },
    {
        "id": "B57",
        "nomcartebonus": "Lanternes des Esprits Perdus",
        "pourcentagebonus": "15",
        "tourbonus": "2",
        "nomdupouvoir": "Lueur Spectrale",
        "description": "Empêche les ennemis de fuir",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/57.png"
    },
    {
        "id": "B58",
        "nomcartebonus": "Lanternes des Esprits Perdus",
        "pourcentagebonus": "15",
        "tourbonus": "2",
        "nomdupouvoir": "Lueur Spectrale",
        "description": "Empêche les ennemis de fuir",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/58.png"
    },
    {
        "id": "B59",
        "nomcartebonus": "Écu du Dragon Endormi",
        "pourcentagebonus": "25",
        "tourbonus": "3",
        "nomdupouvoir": "Protection Draconique",
        "description": "Réduit tous les dégâts subis",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/59.png"
    },
    {
        "id": "B60",
        "nomcartebonus": "Écu du Dragon Endormi",
        "pourcentagebonus": "25",
        "tourbonus": "3",
        "nomdupouvoir": "Protection Draconique",
        "description": "Réduit tous les dégâts subis",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/60.png"
    },
    {
        "id": "B61",
        "nomcartebonus": "Gemme du Cauchemar Sans Fin",
        "pourcentagebonus": "20",
        "tourbonus": "2",
        "nomdupouvoir": "Horreur Onirique",
        "description": "Fait perdre de la concentration aux ennemis",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/61.png"
    },
    {
        "id": "B62",
        "nomcartebonus": "Gemme du Cauchemar Sans Fin",
        "pourcentagebonus": "20",
        "tourbonus": "2",
        "nomdupouvoir": "Horreur Onirique",
        "description": "Fait perdre de la concentration aux ennemis",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/62.png"
    },
    {
        "id": "B63",
        "nomcartebonus": "Plume du Phoenix Déchu",
        "pourcentagebonus": "30",
        "tourbonus": "3",
        "nomdupouvoir": "Renaissance Ardente",
        "description": "Résurrection avec un bonus d'attaque",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/63.png"
    },
    {
        "id": "B64",
        "nomcartebonus": "Plume du Phoenix Déchu",
        "pourcentagebonus": "30",
        "tourbonus": "3",
        "nomdupouvoir": "Renaissance Ardente",
        "description": "Résurrection avec un bonus d'attaque",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/64.png"
    },
    {
        "id": "B65",
        "nomcartebonus": "Talisman du Chaos Primordial",
        "pourcentagebonus": "25",
        "tourbonus": "2",
        "nomdupouvoir": "Vortex Chaotique",
        "description": "Mélange les statuts des combattants",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/65.png"
    },
    {
        "id": "B66",
        "nomcartebonus": "Talisman du Chaos Primordial",
        "pourcentagebonus": "25",
        "tourbonus": "2",
        "nomdupouvoir": "Vortex Chaotique",
        "description": "Mélange les statuts des combattants",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/66.png"
    },
    {
        "id": "B67",
        "nomcartebonus": "Totem du Dernier Esprit",
        "pourcentagebonus": "20",
        "tourbonus": "3",
        "nomdupouvoir": "Invocation Suprême",
        "description": "Renforce massivement un allié",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/67.png"
    },
    {
        "id": "B68",
        "nomcartebonus": "Totem du Dernier Esprit",
        "pourcentagebonus": "20",
        "tourbonus": "3",
        "nomdupouvoir": "Invocation Suprême",
        "description": "Renforce massivement un allié",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/68.png"
    },
    {
        "id": "B69",
        "nomcartebonus": "Médaillon des Héros Perdus",
        "pourcentagebonus": "15",
        "tourbonus": "2",
        "nomdupouvoir": "Dernier Courage",
        "description": "Accorde une action supplémentaire en cas de danger",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/69.png"
    },
    {
        "id": "B70",
        "nomcartebonus": "Médaillon des Héros Perdus",
        "pourcentagebonus": "15",
        "tourbonus": "2",
        "nomdupouvoir": "Dernier Courage",
        "description": "Accorde une action supplémentaire en cas de danger",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/70.png"
    },
    {
        "id": "B71",
        "nomcartebonus": "Cristal du Zénith Astral",
        "pourcentagebonus": "20",
        "tourbonus": "3",
        "nomdupouvoir": "Clarté Cosmique",
        "description": "Augmente temporairement la vitesse",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/71.png"
    },
    {
        "id": "B72",
        "nomcartebonus": "Cristal du Zénith Astral",
        "pourcentagebonus": "20",
        "tourbonus": "3",
        "nomdupouvoir": "Clarté Cosmique",
        "description": "Augmente temporairement la vitesse",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/72.png"
    },
    {
        "id": "B73",
        "nomcartebonus": "Éclat de la Lame Divine",
        "pourcentagebonus": "25",
        "tourbonus": "2",
        "nomdupouvoir": "Tranchant Céleste",
        "description": "Augmente la puissance d'attaque",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/73.png"
    },
    {
        "id": "B74",
        "nomcartebonus": "Éclat de la Lame Divine",
        "pourcentagebonus": "25",
        "tourbonus": "2",
        "nomdupouvoir": "Tranchant Céleste",
        "description": "Augmente la puissance d'attaque",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/74.png"
    },
    {
        "id": "B75",
        "nomcartebonus": "Rosée du Matin Sacré",
        "pourcentagebonus": "20",
        "tourbonus": "3",
        "nomdupouvoir": "Purification Naturelle",
        "description": "Soigne tous les malus de statut",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/75.png"
    },
    {
        "id": "B76",
        "nomcartebonus": "Rosée du Matin Sacré",
        "pourcentagebonus": "20",
        "tourbonus": "3",
        "nomdupouvoir": "Purification Naturelle",
        "description": "Soigne tous les malus de statut",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/76.png"
    },
    {
        "id": "B77",
        "nomcartebonus": "Bannière du Dernier Rempart",
        "pourcentagebonus": "30",
        "tourbonus": "2",
        "nomdupouvoir": "Détermination Inébranlable",
        "description": "Diminue les dégâts subis en défense",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/77.png"
    },
    {
        "id": "B78",
        "nomcartebonus": "Bannière du Dernier Rempart",
        "pourcentagebonus": "30",
        "tourbonus": "2",
        "nomdupouvoir": "Détermination Inébranlable",
        "description": "Diminue les dégâts subis en défense",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/78.png"
    },
    {
        "id": "B79",
        "nomcartebonus": "Perle du Dragon Enchaîné",
        "pourcentagebonus": "25",
        "tourbonus": "3",
        "nomdupouvoir": "Rage Libérée",
        "description": "Augmente l'attaque en fonction des PV perdus",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/79.png"
    },
    {
        "id": "B80",
        "nomcartebonus": "Perle du Dragon Enchaîné",
        "pourcentagebonus": "25",
        "tourbonus": "3",
        "nomdupouvoir": "Rage Libérée",
        "description": "Augmente l'attaque en fonction des PV perdus",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/80.png"
    },
    {
        "id": "B81",
        "nomcartebonus": "Scarabée de l'Éclipse Noire",
        "pourcentagebonus": "20",
        "tourbonus": "2",
        "nomdupouvoir": "Ombre Silencieuse",
        "description": "Rend le porteur insensible aux coups critiques",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/81.png"
    },
    {
        "id": "B82",
        "nomcartebonus": "Scarabée de l'Éclipse Noire",
        "pourcentagebonus": "20",
        "tourbonus": "2",
        "nomdupouvoir": "Ombre Silencieuse",
        "description": "Rend le porteur insensible aux coups critiques",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/82.png"
    },
    {
        "id": "B83",
        "nomcartebonus": "Sceau de la Destinée Oubliée",
        "pourcentagebonus": "15",
        "tourbonus": "3",
        "nomdupouvoir": "Vision Prophétique",
        "description": "Augmente la précision des attaques",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/83.png"
    },
    {
        "id": "B84",
        "nomcartebonus": "Sceau de la Destinée Oubliée",
        "pourcentagebonus": "15",
        "tourbonus": "3",
        "nomdupouvoir": "Vision Prophétique",
        "description": "Augmente la précision des attaques",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/84.png"
    },
    {
        "id": "B85",
        "nomcartebonus": "Orbe des Âmes Perdues",
        "pourcentagebonus": "30",
        "tourbonus": "2",
        "nomdupouvoir": "Absorption Spectrale",
        "description": "Convertit les dégâts infligés en soin",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/85.png"
    },
    {
        "id": "B86",
        "nomcartebonus": "Orbe des Âmes Perdues",
        "pourcentagebonus": "30",
        "tourbonus": "2",
        "nomdupouvoir": "Absorption Spectrale",
        "description": "Convertit les dégâts infligés en soin",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/86.png"
    },
    {
        "id": "B87",
        "nomcartebonus": "Cœur de la Flamme Antique",
        "pourcentagebonus": "25",
        "tourbonus": "3",
        "nomdupouvoir": "Éveil du Brasier",
        "description": "Inflige des dégâts de feu supplémentaires",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/87.png"
    },
    {
        "id": "B88",
        "nomcartebonus": "Cœur de la Flamme Antique",
        "pourcentagebonus": "25",
        "tourbonus": "3",
        "nomdupouvoir": "Éveil du Brasier",
        "description": "Inflige des dégâts de feu supplémentaires",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/88.png"
    },
    {
        "id": "B89",
        "nomcartebonus": "Plume du Vent Éthéré",
        "pourcentagebonus": "20",
        "tourbonus": "2",
        "nomdupouvoir": "Esquive Fantôme",
        "description": "Augmente temporairement l'esquive",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/89.png"
    },
    {
        "id": "B90",
        "nomcartebonus": "Plume du Vent Éthéré",
        "pourcentagebonus": "20",
        "tourbonus": "2",
        "nomdupouvoir": "Esquive Fantôme",
        "description": "Augmente temporairement l'esquive",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/90.png"
    },
    {
        "id": "B91",
        "nomcartebonus": "Totem de la Terre Éveillée",
        "pourcentagebonus": "20",
        "tourbonus": "3",
        "nomdupouvoir": "Force Ancestrale",
        "description": "Augmente la résistance aux altérations",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/91.png"
    },
    {
        "id": "B92",
        "nomcartebonus": "Totem de la Terre Éveillée",
        "pourcentagebonus": "20",
        "tourbonus": "3",
        "nomdupouvoir": "Force Ancestrale",
        "description": "Augmente la résistance aux altérations",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/92.png"
    },
    {
        "id": "B93",
        "nomcartebonus": "Griffe du Fauve Souverain",
        "pourcentagebonus": "25",
        "tourbonus": "2",
        "nomdupouvoir": "Instinct Sauvage",
        "description": "Augmente le taux de coup critique",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/93.png"
    },
    {
        "id": "B94",
        "nomcartebonus": "Griffe du Fauve Souverain",
        "pourcentagebonus": "25",
        "tourbonus": "2",
        "nomdupouvoir": "Instinct Sauvage",
        "description": "Augmente le taux de coup critique",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/94.png"
    },
    {
        "id": "B95",
        "nomcartebonus": "Marque du Jugement Céleste",
        "pourcentagebonus": "30",
        "tourbonus": "3",
        "nomdupouvoir": "Sanction Divine",
        "description": "Inflige des dégâts aux ennemis qui attaquent",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/95.png"
    },
    {
        "id": "B96",
        "nomcartebonus": "Marque du Jugement Céleste",
        "pourcentagebonus": "30",
        "tourbonus": "3",
        "nomdupouvoir": "Sanction Divine",
        "description": "Inflige des dégâts aux ennemis qui attaquent",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/96.png"
    },
    {
        "id": "B97",
        "nomcartebonus": "Bague de la Lune Disparue",
        "pourcentagebonus": "20",
        "tourbonus": "2",
        "nomdupouvoir": "Aura Mystique",
        "description": "Confère une chance d'attaque double",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/97.png"
    },
    {
        "id": "B98",
        "nomcartebonus": "Bague de la Lune Disparue",
        "pourcentagebonus": "20",
        "tourbonus": "2",
        "nomdupouvoir": "Aura Mystique",
        "description": "Confère une chance d'attaque double",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/98.png"
    },
    {
        "id": "B99",
        "nomcartebonus": "Serre du Faucon Divin",
        "pourcentagebonus": "25",
        "tourbonus": "3",
        "nomdupouvoir": "Précision Chirurgicale",
        "description": "Ignore une partie de la défense ennemie",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/99.png"
    },
    {
        "id": "B100",
        "nomcartebonus": "Serre du Faucon Divin",
        "pourcentagebonus": "25",
        "tourbonus": "3",
        "nomdupouvoir": "Précision Chirurgicale",
        "description": "Ignore une partie de la défense ennemie",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/bonus/data/images/bonus/100.png"
    }
]

===== /Users/robert/Victorryan/stock/personnages.json =====
[
    {
        "id": "P1",
        "nomcarteperso": "ZEPHYR",
        "pointsdevie": "100",
        "forceattaque": "30",
        "tourattaque": "2",
        "nomdupouvoir": "Tempête Déchaînée",
        "description": "Inflige une tempête violente à l'ennemi",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/1.png"
    },
    {
        "id": "P2",
        "nomcarteperso": "ZEPHYR",
        "pointsdevie": "100",
        "forceattaque": "30",
        "tourattaque": "2",
        "nomdupouvoir": "Tempête Déchaînée",
        "description": "Inflige une tempête violente à l'ennemi",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/2.png"
    },
    {
        "id": "P3",
        "nomcarteperso": "ÉMISSAIRE DES GALAXIES",
        "pointsdevie": "100",
        "forceattaque": "25",
        "tourattaque": "3",
        "nomdupouvoir": "Éveil Céleste",
        "description": "Appelle une énergie cosmique protectrice",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/3.png"
    },
    {
        "id": "P4",
        "nomcarteperso": "ÉMISSAIRE DES GALAXIES",
        "pointsdevie": "100",
        "forceattaque": "25",
        "tourattaque": "3",
        "nomdupouvoir": "Éveil Céleste",
        "description": "Appelle une énergie cosmique protectrice",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/4.png"
    },
    {
        "id": "P5",
        "nomcarteperso": "MAÎTRE DES SABLES NUMÉRIQUES",
        "pointsdevie": "100",
        "forceattaque": "35",
        "tourattaque": "2",
        "nomdupouvoir": "Déchirure Temporelle",
        "description": "Déstabilise le flux du temps",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/5.png"
    },
    {
        "id": "P6",
        "nomcarteperso": "MAÎTRE DES SABLES NUMÉRIQUES",
        "pointsdevie": "100",
        "forceattaque": "35",
        "tourattaque": "2",
        "nomdupouvoir": "Déchirure Temporelle",
        "description": "Déstabilise le flux du temps",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/6.png"
    },
    {
        "id": "P7",
        "nomcarteperso": "CAMPRIMTRAINE DES FLOTS",
        "pointsdevie": "100",
        "forceattaque": "30",
        "tourattaque": "2",
        "nomdupouvoir": "Navigation Transdimensionnelle",
        "description": "Traverse les dimensions pour surprendre l'adversaire",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/7.png"
    },
    {
        "id": "P8",
        "nomcarteperso": "CAMPRIMTRAINE DES FLOTS",
        "pointsdevie": "100",
        "forceattaque": "30",
        "tourattaque": "2",
        "nomdupouvoir": "Navigation Transdimensionnelle",
        "description": "Traverse les dimensions pour surprendre l'adversaire",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/8.png"
    },
    {
        "id": "P9",
        "nomcarteperso": "Le Champion du Tonnerre",
        "pointsdevie": "100",
        "forceattaque": "40",
        "tourattaque": "3",
        "nomdupouvoir": "Fureur Draconique",
        "description": "Libère une puissante énergie foudroyante",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/9.png"
    },
    {
        "id": "P10",
        "nomcarteperso": "Le Champion du Tonnerre",
        "pointsdevie": "100",
        "forceattaque": "40",
        "tourattaque": "3",
        "nomdupouvoir": "Fureur Draconique",
        "description": "Libère une puissante énergie foudroyante",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/10.png"
    },
    {
        "id": "P11",
        "nomcarteperso": "Gardien des Abysses Oubliées",
        "pointsdevie": "100",
        "forceattaque": "35",
        "tourattaque": "2",
        "nomdupouvoir": "Marée Bioluminescente",
        "description": "Inonde le champ de bataille d'une marée lumineuse",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/11.png"
    },
    {
        "id": "P12",
        "nomcarteperso": "Gardien des Abysses Oubliées",
        "pointsdevie": "100",
        "forceattaque": "35",
        "tourattaque": "2",
        "nomdupouvoir": "Marée Bioluminescente",
        "description": "Inonde le champ de bataille d'une marée lumineuse",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/12.png"
    },
    {
        "id": "P13",
        "nomcarteperso": "Savant du Temps Mécanique",
        "pointsdevie": "100",
        "forceattaque": "30",
        "tourattaque": "2",
        "nomdupouvoir": "Archiviste d'Éternité",
        "description": "Protège par une mémoire temporelle infinie",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/13.png"
    },
    {
        "id": "P14",
        "nomcarteperso": "Savant du Temps Mécanique",
        "pointsdevie": "100",
        "forceattaque": "30",
        "tourattaque": "2",
        "nomdupouvoir": "Archiviste d'Éternité",
        "description": "Protège par une mémoire temporelle infinie",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/14.png"
    },
    {
        "id": "P15",
        "nomcarteperso": "Le Briseur de Codes",
        "pointsdevie": "100",
        "forceattaque": "40",
        "tourattaque": "3",
        "nomdupouvoir": "Virus Disruptif",
        "description": "Perturbe les systèmes adverses",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/15.png"
    },
    {
        "id": "P16",
        "nomcarteperso": "Le Briseur de Codes",
        "pointsdevie": "100",
        "forceattaque": "40",
        "tourattaque": "3",
        "nomdupouvoir": "Virus Disruptif",
        "description": "Perturbe les systèmes adverses",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/16.png"
    },
    {
        "id": "P17",
        "nomcarteperso": "Le Chasseur de Mystères à Vapeur",
        "pointsdevie": "100",
        "forceattaque": "25",
        "tourattaque": "2",
        "nomdupouvoir": "Chronométrie Détective",
        "description": "Prévoit les actions adverses",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/17.png"
    },
    {
        "id": "P18",
        "nomcarteperso": "Le Chasseur de Mystères à Vapeur",
        "pointsdevie": "100",
        "forceattaque": "25",
        "tourattaque": "2",
        "nomdupouvoir": "Chronométrie Détective",
        "description": "Prévoit les actions adverses",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/18.png"
    },
    {
        "id": "P19",
        "nomcarteperso": "Spectre de la Nuit Silencieuse",
        "pointsdevie": "100",
        "forceattaque": "35",
        "tourattaque": "3",
        "nomdupouvoir": "Danse des Spectres",
        "description": "Enveloppe l'adversaire de ténèbres mouvantes",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/19.png"
    },
    {
        "id": "P20",
        "nomcarteperso": "Spectre de la Nuit Silencieuse",
        "pointsdevie": "100",
        "forceattaque": "35",
        "tourattaque": "3",
        "nomdupouvoir": "Danse des Spectres",
        "description": "Enveloppe l'adversaire de ténèbres mouvantes",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/20.png"
    },
    {
        "id": "P21",
        "nomcarteperso": "Avatar de la Sylve Éternelle",
        "pointsdevie": "100",
        "forceattaque": "30",
        "tourattaque": "2",
        "nomdupouvoir": "Renaissance Florale",
        "description": "Soigne les blessures par la magie naturelle",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/21.png"
    },
    {
        "id": "P22",
        "nomcarteperso": "Avatar de la Sylve Éternelle",
        "pointsdevie": "100",
        "forceattaque": "30",
        "tourattaque": "2",
        "nomdupouvoir": "Renaissance Florale",
        "description": "Soigne les blessures par la magie naturelle",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/22.png"
    },
    {
        "id": "P23",
        "nomcarteperso": "L'Errante des Royaumes Éthérés",
        "pointsdevie": "100",
        "forceattaque": "35",
        "tourattaque": "3",
        "nomdupouvoir": "Appel des Âmes Perdues",
        "description": "Invoque les âmes pour perturber l'adversaire",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/23.png"
    },
    {
        "id": "P24",
        "nomcarteperso": "L'Errante des Royaumes Éthérés",
        "pointsdevie": "100",
        "forceattaque": "35",
        "tourattaque": "3",
        "nomdupouvoir": "Appel des Âmes Perdues",
        "description": "Invoque les âmes pour perturber l'adversaire",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/24.png"
    },
    {
        "id": "P25",
        "nomcarteperso": "Voyageur des Brumes Cosmiques",
        "pointsdevie": "100",
        "forceattaque": "30",
        "tourattaque": "2",
        "nomdupouvoir": "Adaptation Planétaire",
        "description": "S'adapte à toutes les attaques adverses",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/25.png"
    },
    {
        "id": "P26",
        "nomcarteperso": "Voyageur des Brumes Cosmiques",
        "pointsdevie": "100",
        "forceattaque": "30",
        "tourattaque": "2",
        "nomdupouvoir": "Adaptation Planétaire",
        "description": "S'adapte à toutes les attaques adverses",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/26.png"
    },
    {
        "id": "P27",
        "nomcarteperso": "Gardien des Songes Fracturés",
        "pointsdevie": "100",
        "forceattaque": "40",
        "tourattaque": "3",
        "nomdupouvoir": "Maître des Rêves Distordus",
        "description": "Contrôle les rêves pour infliger des dégâts psychiques",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/27.png"
    },
    {
        "id": "P28",
        "nomcarteperso": "Gardien des Songes Fracturés",
        "pointsdevie": "100",
        "forceattaque": "40",
        "tourattaque": "3",
        "nomdupouvoir": "Maître des Rêves Distordus",
        "description": "Contrôle les rêves pour infliger des dégâts psychiques",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/28.png"
    },
    {
        "id": "P29",
        "nomcarteperso": "Seigneur du Néant",
        "pointsdevie": "100",
        "forceattaque": "40",
        "tourattaque": "3",
        "nomdupouvoir": "Vortex Abyssal",
        "description": "Crée une tempête de vide",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/29.png"
    },
    {
        "id": "P30",
        "nomcarteperso": "Seigneur du Néant",
        "pointsdevie": "100",
        "forceattaque": "40",
        "tourattaque": "3",
        "nomdupouvoir": "Vortex Abyssal",
        "description": "Crée une tempête de vide",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/30.png"
    },
    {
        "id": "P31",
        "nomcarteperso": "Messager du Crépuscule",
        "pointsdevie": "100",
        "forceattaque": "35",
        "tourattaque": "3",
        "nomdupouvoir": "Ombres Rampantes",
        "description": "Enveloppe l'adversaire d'ombres",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/31.png"
    },
    {
        "id": "P32",
        "nomcarteperso": "Messager du Crépuscule",
        "pointsdevie": "100",
        "forceattaque": "35",
        "tourattaque": "3",
        "nomdupouvoir": "Ombres Rampantes",
        "description": "Enveloppe l'adversaire d'ombres",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/32.png"
    },
    {
        "id": "P33",
        "nomcarteperso": "Arcaniste des Vents",
        "pointsdevie": "100",
        "forceattaque": "30",
        "tourattaque": "2",
        "nomdupouvoir": "Ouragan Mystique",
        "description": "Lance un souffle dévastateur",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/33.png"
    },
    {
        "id": "P34",
        "nomcarteperso": "Arcaniste des Vents",
        "pointsdevie": "100",
        "forceattaque": "30",
        "tourattaque": "2",
        "nomdupouvoir": "Ouragan Mystique",
        "description": "Lance un souffle dévastateur",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/34.png"
    },
    {
        "id": "P35",
        "nomcarteperso": "Pyromancien des Cendres",
        "pointsdevie": "100",
        "forceattaque": "40",
        "tourattaque": "3",
        "nomdupouvoir": "Flammes du Chaos",
        "description": "Invoque une explosion ardente",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/35.png"
    },
    {
        "id": "P36",
        "nomcarteperso": "Pyromancien des Cendres",
        "pointsdevie": "100",
        "forceattaque": "40",
        "tourattaque": "3",
        "nomdupouvoir": "Flammes du Chaos",
        "description": "Invoque une explosion ardente",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/36.png"
    },
    {
        "id": "P37",
        "nomcarteperso": "Sentinelle du Temps",
        "pointsdevie": "100",
        "forceattaque": "30",
        "tourattaque": "2",
        "nomdupouvoir": "Chrono-Barrière",
        "description": "Erige un mur temporel protecteur",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/37.png"
    },
    {
        "id": "P38",
        "nomcarteperso": "Sentinelle du Temps",
        "pointsdevie": "100",
        "forceattaque": "30",
        "tourattaque": "2",
        "nomdupouvoir": "Chrono-Barrière",
        "description": "Erige un mur temporel protecteur",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/38.png"
    },
    {
        "id": "P39",
        "nomcarteperso": "Alchimiste du Néant",
        "pointsdevie": "100",
        "forceattaque": "35",
        "tourattaque": "3",
        "nomdupouvoir": "Transmutation Obscure",
        "description": "Altère la matière à volonté",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/39.png"
    },
    {
        "id": "P40",
        "nomcarteperso": "Alchimiste du Néant",
        "pointsdevie": "100",
        "forceattaque": "35",
        "tourattaque": "3",
        "nomdupouvoir": "Transmutation Obscure",
        "description": "Altère la matière à volonté",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/40.png"
    },
    {
        "id": "P41",
        "nomcarteperso": "Marcheur des Songes",
        "pointsdevie": "100",
        "forceattaque": "30",
        "tourattaque": "2",
        "nomdupouvoir": "Rêverie Éthérée",
        "description": "Endort temporairement l'ennemi",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/41.png"
    },
    {
        "id": "P42",
        "nomcarteperso": "Marcheur des Songes",
        "pointsdevie": "100",
        "forceattaque": "30",
        "tourattaque": "2",
        "nomdupouvoir": "Rêverie Éthérée",
        "description": "Endort temporairement l'ennemi",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/42.png"
    },
    {
        "id": "P43",
        "nomcarteperso": "Chevalier du Zénith",
        "pointsdevie": "100",
        "forceattaque": "35",
        "tourattaque": "3",
        "nomdupouvoir": "Lame Astrale",
        "description": "Tranche avec une épée chargée d'énergie stellaire",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/43.png"
    },
    {
        "id": "P44",
        "nomcarteperso": "Chevalier du Zénith",
        "pointsdevie": "100",
        "forceattaque": "35",
        "tourattaque": "3",
        "nomdupouvoir": "Lame Astrale",
        "description": "Tranche avec une épée chargée d'énergie stellaire",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/44.png"
    },
    {
        "id": "P45",
        "nomcarteperso": "Oracle des Vortex",
        "pointsdevie": "100",
        "forceattaque": "30",
        "tourattaque": "2",
        "nomdupouvoir": "Prédiction Chaotique",
        "description": "Anticipe et contre les attaques ennemies",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/45.png"
    },
    {
        "id": "P46",
        "nomcarteperso": "Oracle des Vortex",
        "pointsdevie": "100",
        "forceattaque": "30",
        "tourattaque": "2",
        "nomdupouvoir": "Prédiction Chaotique",
        "description": "Anticipe et contre les attaques ennemies",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/46.png"
    },
    {
        "id": "P47",
        "nomcarteperso": "Seigneur des Cendres",
        "pointsdevie": "100",
        "forceattaque": "40",
        "tourattaque": "3",
        "nomdupouvoir": "Incandescence Sombre",
        "description": "Invoque des flammes destructrices",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/47.png"
    },
    {
        "id": "P48",
        "nomcarteperso": "Seigneur des Cendres",
        "pointsdevie": "100",
        "forceattaque": "40",
        "tourattaque": "3",
        "nomdupouvoir": "Incandescence Sombre",
        "description": "Invoque des flammes destructrices",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/48.png"
    },
    {
        "id": "P49",
        "nomcarteperso": "Éclaireur des Ruines Perdues",
        "pointsdevie": "100",
        "forceattaque": "35",
        "tourattaque": "3",
        "nomdupouvoir": "Souffle des Anciens",
        "description": "Canalise l'énergie d'anciens vestiges",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/49.png"
    },
    {
        "id": "P50",
        "nomcarteperso": "Éclaireur des Ruines Perdues",
        "pointsdevie": "100",
        "forceattaque": "35",
        "tourattaque": "3",
        "nomdupouvoir": "Souffle des Anciens",
        "description": "Canalise l'énergie d'anciens vestiges",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/50.png"
    },
    {
        "id": "P51",
        "nomcarteperso": "Sentinelle du Néant",
        "pointsdevie": "100",
        "forceattaque": "30",
        "tourattaque": "2",
        "nomdupouvoir": "Ombre Furtive",
        "description": "Se déplace sans être détecté",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/51.png"
    },
    {
        "id": "P52",
        "nomcarteperso": "Sentinelle du Néant",
        "pointsdevie": "100",
        "forceattaque": "30",
        "tourattaque": "2",
        "nomdupouvoir": "Ombre Furtive",
        "description": "Se déplace sans être détecté",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/52.png"
    },
    {
        "id": "P53",
        "nomcarteperso": "Chaman des Vents",
        "pointsdevie": "100",
        "forceattaque": "35",
        "tourattaque": "3",
        "nomdupouvoir": "Ouragan Céleste",
        "description": "Déchaîne une tempête de vent",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/53.png"
    },
    {
        "id": "P54",
        "nomcarteperso": "Chaman des Vents",
        "pointsdevie": "100",
        "forceattaque": "35",
        "tourattaque": "3",
        "nomdupouvoir": "Ouragan Céleste",
        "description": "Déchaîne une tempête de vent",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/54.png"
    },
    {
        "id": "P55",
        "nomcarteperso": "Maître des Illusions",
        "pointsdevie": "100",
        "forceattaque": "30",
        "tourattaque": "2",
        "nomdupouvoir": "Reflet Trompeur",
        "description": "Crée des copies illusoires",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/55.png"
    },
    {
        "id": "P56",
        "nomcarteperso": "Maître des Illusions",
        "pointsdevie": "100",
        "forceattaque": "30",
        "tourattaque": "2",
        "nomdupouvoir": "Reflet Trompeur",
        "description": "Crée des copies illusoires",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/56.png"
    },
    {
        "id": "P57",
        "nomcarteperso": "Gardien de l'Abîme",
        "pointsdevie": "100",
        "forceattaque": "35",
        "tourattaque": "3",
        "nomdupouvoir": "Poigne Maudite",
        "description": "Entrave un ennemi avec des chaînes d'ombre",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/57.png"
    },
    {
        "id": "P58",
        "nomcarteperso": "Gardien de l'Abîme",
        "pointsdevie": "100",
        "forceattaque": "35",
        "tourattaque": "3",
        "nomdupouvoir": "Poigne Maudite",
        "description": "Entrave un ennemi avec des chaînes d'ombre",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/58.png"
    },
    {
        "id": "P59",
        "nomcarteperso": "Druide Éternel",
        "pointsdevie": "100",
        "forceattaque": "30",
        "tourattaque": "2",
        "nomdupouvoir": "Bénédiction Sylvestre",
        "description": "Guérit les alliés avec l'énergie de la nature",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/59.png"
    },
    {
        "id": "P60",
        "nomcarteperso": "Druide Éternel",
        "pointsdevie": "100",
        "forceattaque": "30",
        "tourattaque": "2",
        "nomdupouvoir": "Bénédiction Sylvestre",
        "description": "Guérit les alliés avec l'énergie de la nature",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/60.png"
    },
    {
        "id": "P61",
        "nomcarteperso": "Champion des Tempêtes",
        "pointsdevie": "100",
        "forceattaque": "40",
        "tourattaque": "3",
        "nomdupouvoir": "Déluge Foudroyant",
        "description": "Lance une pluie d'éclairs",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/61.png"
    },
    {
        "id": "P62",
        "nomcarteperso": "Champion des Tempêtes",
        "pointsdevie": "100",
        "forceattaque": "40",
        "tourattaque": "3",
        "nomdupouvoir": "Déluge Foudroyant",
        "description": "Lance une pluie d'éclairs",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/62.png"
    },
    {
        "id": "P63",
        "nomcarteperso": "Alchimiste Dément",
        "pointsdevie": "100",
        "forceattaque": "30",
        "tourattaque": "2",
        "nomdupouvoir": "Élixir Chaotique",
        "description": "Altère l'état des combattants",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/63.png"
    },
    {
        "id": "P64",
        "nomcarteperso": "Alchimiste Dément",
        "pointsdevie": "100",
        "forceattaque": "30",
        "tourattaque": "2",
        "nomdupouvoir": "Élixir Chaotique",
        "description": "Altère l'état des combattants",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/64.png"
    },
    {
        "id": "P65",
        "nomcarteperso": "Rôdeur des Ténèbres",
        "pointsdevie": "100",
        "forceattaque": "35",
        "tourattaque": "3",
        "nomdupouvoir": "Traque Silencieuse",
        "description": "Se fond dans l'obscurité pour attaquer",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/65.png"
    },
    {
        "id": "P66",
        "nomcarteperso": "Rôdeur des Ténèbres",
        "pointsdevie": "100",
        "forceattaque": "35",
        "tourattaque": "3",
        "nomdupouvoir": "Traque Silencieuse",
        "description": "Se fond dans l'obscurité pour attaquer",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/66.png"
    },
    {
        "id": "P67",
        "nomcarteperso": "Messager Céleste",
        "pointsdevie": "100",
        "forceattaque": "40",
        "tourattaque": "3",
        "nomdupouvoir": "Chute Stellaire",
        "description": "Fait tomber une étoile sur l'ennemi",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/67.png"
    },
    {
        "id": "P68",
        "nomcarteperso": "Messager Céleste",
        "pointsdevie": "100",
        "forceattaque": "40",
        "tourattaque": "3",
        "nomdupouvoir": "Chute Stellaire",
        "description": "Fait tomber une étoile sur l'ennemi",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/68.png"
    },
    {
        "id": "P69",
        "nomcarteperso": "Paladin des Lueurs",
        "pointsdevie": "100",
        "forceattaque": "30",
        "tourattaque": "2",
        "nomdupouvoir": "Bouclier Radieux",
        "description": "Protège et repousse les ténèbres",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/69.png"
    },
    {
        "id": "P70",
        "nomcarteperso": "Paladin des Lueurs",
        "pointsdevie": "100",
        "forceattaque": "30",
        "tourattaque": "2",
        "nomdupouvoir": "Bouclier Radieux",
        "description": "Protège et repousse les ténèbres",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/70.png"
    },
    {
        "id": "P71",
        "nomcarteperso": "Archon du Néant",
        "pointsdevie": "100",
        "forceattaque": "40",
        "tourattaque": "3",
        "nomdupouvoir": "Déchirure Cosmique",
        "description": "Crée une faille dimensionnelle",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/71.png"
    },
    {
        "id": "P72",
        "nomcarteperso": "Archon du Néant",
        "pointsdevie": "100",
        "forceattaque": "40",
        "tourattaque": "3",
        "nomdupouvoir": "Déchirure Cosmique",
        "description": "Crée une faille dimensionnelle",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/72.png"
    },
    {
        "id": "P73",
        "nomcarteperso": "Gardienne Astrale",
        "pointsdevie": "100",
        "forceattaque": "30",
        "tourattaque": "2",
        "nomdupouvoir": "Éveil Stellaire",
        "description": "Déploie une énergie céleste protectrice",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/73.png"
    },
    {
        "id": "P74",
        "nomcarteperso": "Gardienne Astrale",
        "pointsdevie": "100",
        "forceattaque": "30",
        "tourattaque": "2",
        "nomdupouvoir": "Éveil Stellaire",
        "description": "Déploie une énergie céleste protectrice",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/74.png"
    },
    {
        "id": "P75",
        "nomcarteperso": "Roi Spectral",
        "pointsdevie": "100",
        "forceattaque": "35",
        "tourattaque": "3",
        "nomdupouvoir": "Marche Fantomatique",
        "description": "Traverse la réalité pour surprendre l'ennemi",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/75.png"
    },
    {
        "id": "P76",
        "nomcarteperso": "Roi Spectral",
        "pointsdevie": "100",
        "forceattaque": "35",
        "tourattaque": "3",
        "nomdupouvoir": "Marche Fantomatique",
        "description": "Traverse la réalité pour surprendre l'ennemi",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/76.png"
    },
    {
        "id": "P77",
        "nomcarteperso": "Seigneur des Flammes Éternelles",
        "pointsdevie": "100",
        "forceattaque": "40",
        "tourattaque": "3",
        "nomdupouvoir": "Incandescence Infernale",
        "description": "Déchaîne une vague de feu ardente",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/77.png"
    },
    {
        "id": "P78",
        "nomcarteperso": "Seigneur des Flammes Éternelles",
        "pointsdevie": "100",
        "forceattaque": "40",
        "tourattaque": "3",
        "nomdupouvoir": "Incandescence Infernale",
        "description": "Déchaîne une vague de feu ardente",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/78.png"
    },
    {
        "id": "P79",
        "nomcarteperso": "Oracle des Marées",
        "pointsdevie": "100",
        "forceattaque": "30",
        "tourattaque": "2",
        "nomdupouvoir": "Vague Prophétique",
        "description": "Prédit l'avenir en contrôlant les marées",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/79.png"
    },
    {
        "id": "P80",
        "nomcarteperso": "Oracle des Marées",
        "pointsdevie": "100",
        "forceattaque": "30",
        "tourattaque": "2",
        "nomdupouvoir": "Vague Prophétique",
        "description": "Prédit l'avenir en contrôlant les marées",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/80.png"
    },
    {
        "id": "P81",
        "nomcarteperso": "Chaman des Tempêtes",
        "pointsdevie": "100",
        "forceattaque": "35",
        "tourattaque": "3",
        "nomdupouvoir": "Fureur Orageuse",
        "description": "Déchaîne une tempête électrisante",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/81.png"
    },
    {
        "id": "P82",
        "nomcarteperso": "Chaman des Tempêtes",
        "pointsdevie": "100",
        "forceattaque": "35",
        "tourattaque": "3",
        "nomdupouvoir": "Fureur Orageuse",
        "description": "Déchaîne une tempête électrisante",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/82.png"
    },
    {
        "id": "P83",
        "nomcarteperso": "Maître des Ombres",
        "pointsdevie": "100",
        "forceattaque": "30",
        "tourattaque": "2",
        "nomdupouvoir": "Voile Nocturne",
        "description": "Se fond dans les ténèbres pour frapper",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/83.png"
    },
    {
        "id": "P84",
        "nomcarteperso": "Maître des Ombres",
        "pointsdevie": "100",
        "forceattaque": "30",
        "tourattaque": "2",
        "nomdupouvoir": "Voile Nocturne",
        "description": "Se fond dans les ténèbres pour frapper",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/84.png"
    },
    {
        "id": "P85",
        "nomcarteperso": "Sentinelle du Néant",
        "pointsdevie": "100",
        "forceattaque": "40",
        "tourattaque": "3",
        "nomdupouvoir": "Écho du Vide",
        "description": "Propage des ondes de vide destructrices",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/85.png"
    },
    {
        "id": "P86",
        "nomcarteperso": "Sentinelle du Néant",
        "pointsdevie": "100",
        "forceattaque": "40",
        "tourattaque": "3",
        "nomdupouvoir": "Écho du Vide",
        "description": "Propage des ondes de vide destructrices",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/86.png"
    },
    {
        "id": "P87",
        "nomcarteperso": "Avatar de la Nature",
        "pointsdevie": "100",
        "forceattaque": "30",
        "tourattaque": "2",
        "nomdupouvoir": "Racines Ancestrales",
        "description": "Entrave les ennemis avec des lianes magiques",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/87.png"
    },
    {
        "id": "P88",
        "nomcarteperso": "Avatar de la Nature",
        "pointsdevie": "100",
        "forceattaque": "30",
        "tourattaque": "2",
        "nomdupouvoir": "Racines Ancestrales",
        "description": "Entrave les ennemis avec des lianes magiques",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/88.png"
    },
    {
        "id": "P89",
        "nomcarteperso": "Seigneur du Givre",
        "pointsdevie": "100",
        "forceattaque": "35",
        "tourattaque": "3",
        "nomdupouvoir": "Blizzard Éternel",
        "description": "Enveloppe le champ de bataille de glace",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/89.png"
    },
    {
        "id": "P90",
        "nomcarteperso": "Seigneur du Givre",
        "pointsdevie": "100",
        "forceattaque": "35",
        "tourattaque": "3",
        "nomdupouvoir": "Blizzard Éternel",
        "description": "Enveloppe le champ de bataille de glace",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/90.png"
    },
    {
        "id": "P91",
        "nomcarteperso": "Champion Céleste",
        "pointsdevie": "100",
        "forceattaque": "40",
        "tourattaque": "3",
        "nomdupouvoir": "Rayon Divin",
        "description": "Canalise une énergie sacrée destructrice",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/91.png"
    },
    {
        "id": "P92",
        "nomcarteperso": "Champion Céleste",
        "pointsdevie": "100",
        "forceattaque": "40",
        "tourattaque": "3",
        "nomdupouvoir": "Rayon Divin",
        "description": "Canalise une énergie sacrée destructrice",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/92.png"
    },
    {
        "id": "P93",
        "nomcarteperso": "Reine des Illusions",
        "pointsdevie": "100",
        "forceattaque": "30",
        "tourattaque": "2",
        "nomdupouvoir": "Miroir Trompeur",
        "description": "Crée des clones illusoires pour troubler l'ennemi",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/93.png"
    },
    {
        "id": "P94",
        "nomcarteperso": "Reine des Illusions",
        "pointsdevie": "100",
        "forceattaque": "30",
        "tourattaque": "2",
        "nomdupouvoir": "Miroir Trompeur",
        "description": "Crée des clones illusoires pour troubler l'ennemi",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/94.png"
    },
    {
        "id": "P95",
        "nomcarteperso": "Esprit de la Lune",
        "pointsdevie": "100",
        "forceattaque": "35",
        "tourattaque": "3",
        "nomdupouvoir": "Lumière Astrale",
        "description": "Illumine le champ de bataille et affaiblit les ennemis",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/95.png"
    },
    {
        "id": "P96",
        "nomcarteperso": "Esprit de la Lune",
        "pointsdevie": "100",
        "forceattaque": "35",
        "tourattaque": "3",
        "nomdupouvoir": "Lumière Astrale",
        "description": "Illumine le champ de bataille et affaiblit les ennemis",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/96.png"
    },
    {
        "id": "P97",
        "nomcarteperso": "Messager du Chaos",
        "pointsdevie": "100",
        "forceattaque": "40",
        "tourattaque": "3",
        "nomdupouvoir": "Tempête Chaotique",
        "description": "Semer le désordre avec une énergie instable",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/97.png"
    },
    {
        "id": "P98",
        "nomcarteperso": "Messager du Chaos",
        "pointsdevie": "100",
        "forceattaque": "40",
        "tourattaque": "3",
        "nomdupouvoir": "Tempête Chaotique",
        "description": "Semer le désordre avec une énergie instable",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/98.png"
    },
    {
        "id": "P99",
        "nomcarteperso": "Paladin de l'Aube",
        "pointsdevie": "100",
        "forceattaque": "30",
        "tourattaque": "2",
        "nomdupouvoir": "Lumière Rédemptrice",
        "description": "Réduit les ténèbres avec une aura sacrée",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/99.png"
    },
    {
        "id": "P100",
        "nomcarteperso": "Paladin de l'Aube",
        "pointsdevie": "100",
        "forceattaque": "30",
        "tourattaque": "2",
        "nomdupouvoir": "Lumière Rédemptrice",
        "description": "Réduit les ténèbres avec une aura sacrée",
        "fond": "https://nlpzherlejtsgjynimko.supabase.co/storage/v1/object/public/images/perso/data/images/perso/100.png"
    }
]

===== /Users/robert/Victorryan/.gitignore =====
node_modules/
.env 

===== /Users/robert/Victorryan/package.json =====
{
  "name": "victorryan",
  "version": "1.0.0",
  "description": "Jeu de cartes en ligne",
  "main": "backend/server.js",
  "scripts": {
    "start": "node backend/server.js",
    "dev": "nodemon backend/server.js"
  },
  "dependencies": {
    "express": "^4.18.2",
    "socket.io": "^4.7.2",
    "cors": "^2.8.5",
    "@supabase/supabase-js": "^2.39.3",
    "dotenv": "^16.4.7"
  },
  "devDependencies": {
    "nodemon": "^3.0.2"
  }
}


===== /Users/robert/Victorryan/package-lock.json =====
{
  "name": "victorryan",
  "version": "1.0.0",
  "lockfileVersion": 3,
  "requires": true,
  "packages": {
    "": {
      "name": "victorryan",
      "version": "1.0.0",
      "dependencies": {
        "@supabase/supabase-js": "^2.39.3",
        "cors": "^2.8.5",
        "dotenv": "^16.4.7",
        "express": "^4.18.2",
        "socket.io": "^4.7.2"
      },
      "devDependencies": {
        "nodemon": "^3.0.2"
      }
    },
    "node_modules/@socket.io/component-emitter": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/@socket.io/component-emitter/-/component-emitter-3.1.2.tgz",
      "integrity": "sha512-9BCxFwvbGg/RsZK9tjXd8s4UcwR0MWeFQ1XEKIQVVvAGJyINdrqKMcTRyLoK8Rse1GjzLV9cwjWV1olXRWEXVA==",
      "license": "MIT"
    },
    "node_modules/@supabase/auth-js": {
      "version": "2.68.0",
      "resolved": "https://registry.npmjs.org/@supabase/auth-js/-/auth-js-2.68.0.tgz",
      "integrity": "sha512-odG7nb7aOmZPUXk6SwL2JchSsn36Ppx11i2yWMIc/meUO2B2HK9YwZHPK06utD9Ql9ke7JKDbwGin/8prHKxxQ==",
      "license": "MIT",
      "dependencies": {
        "@supabase/node-fetch": "^2.6.14"
      }
    },
    "node_modules/@supabase/functions-js": {
      "version": "2.4.4",
      "resolved": "https://registry.npmjs.org/@supabase/functions-js/-/functions-js-2.4.4.tgz",
      "integrity": "sha512-WL2p6r4AXNGwop7iwvul2BvOtuJ1YQy8EbOd0dhG1oN1q8el/BIRSFCFnWAMM/vJJlHWLi4ad22sKbKr9mvjoA==",
      "license": "MIT",
      "dependencies": {
        "@supabase/node-fetch": "^2.6.14"
      }
    },
    "node_modules/@supabase/node-fetch": {
      "version": "2.6.15",
      "resolved": "https://registry.npmjs.org/@supabase/node-fetch/-/node-fetch-2.6.15.tgz",
      "integrity": "sha512-1ibVeYUacxWYi9i0cf5efil6adJ9WRyZBLivgjs+AUpewx1F3xPi7gLgaASI2SmIQxPoCEjAsLAzKPgMJVgOUQ==",
      "license": "MIT",
      "dependencies": {
        "whatwg-url": "^5.0.0"
      },
      "engines": {
        "node": "4.x || >=6.0.0"
      }
    },
    "node_modules/@supabase/postgrest-js": {
      "version": "1.19.2",
      "resolved": "https://registry.npmjs.org/@supabase/postgrest-js/-/postgrest-js-1.19.2.tgz",
      "integrity": "sha512-MXRbk4wpwhWl9IN6rIY1mR8uZCCG4MZAEji942ve6nMwIqnBgBnZhZlON6zTTs6fgveMnoCILpZv1+K91jN+ow==",
      "license": "MIT",
      "dependencies": {
        "@supabase/node-fetch": "^2.6.14"
      }
    },
    "node_modules/@supabase/realtime-js": {
      "version": "2.11.2",
      "resolved": "https://registry.npmjs.org/@supabase/realtime-js/-/realtime-js-2.11.2.tgz",
      "integrity": "sha512-u/XeuL2Y0QEhXSoIPZZwR6wMXgB+RQbJzG9VErA3VghVt7uRfSVsjeqd7m5GhX3JR6dM/WRmLbVR8URpDWG4+w==",
      "license": "MIT",
      "dependencies": {
        "@supabase/node-fetch": "^2.6.14",
        "@types/phoenix": "^1.5.4",
        "@types/ws": "^8.5.10",
        "ws": "^8.18.0"
      }
    },
    "node_modules/@supabase/storage-js": {
      "version": "2.7.1",
      "resolved": "https://registry.npmjs.org/@supabase/storage-js/-/storage-js-2.7.1.tgz",
      "integrity": "sha512-asYHcyDR1fKqrMpytAS1zjyEfvxuOIp1CIXX7ji4lHHcJKqyk+sLl/Vxgm4sN6u8zvuUtae9e4kDxQP2qrwWBA==",
      "license": "MIT",
      "dependencies": {
        "@supabase/node-fetch": "^2.6.14"
      }
    },
    "node_modules/@supabase/supabase-js": {
      "version": "2.49.1",
      "resolved": "https://registry.npmjs.org/@supabase/supabase-js/-/supabase-js-2.49.1.tgz",
      "integrity": "sha512-lKaptKQB5/juEF5+jzmBeZlz69MdHZuxf+0f50NwhL+IE//m4ZnOeWlsKRjjsM0fVayZiQKqLvYdBn0RLkhGiQ==",
      "license": "MIT",
      "dependencies": {
        "@supabase/auth-js": "2.68.0",
        "@supabase/functions-js": "2.4.4",
        "@supabase/node-fetch": "2.6.15",
        "@supabase/postgrest-js": "1.19.2",
        "@supabase/realtime-js": "2.11.2",
        "@supabase/storage-js": "2.7.1"
      }
    },
    "node_modules/@types/cors": {
      "version": "2.8.17",
      "resolved": "https://registry.npmjs.org/@types/cors/-/cors-2.8.17.tgz",
      "integrity": "sha512-8CGDvrBj1zgo2qE+oS3pOCyYNqCPryMWY2bGfwA0dcfopWGgxs+78df0Rs3rc9THP4JkOhLsAa+15VdpAqkcUA==",
      "license": "MIT",
      "dependencies": {
        "@types/node": "*"
      }
    },
    "node_modules/@types/node": {
      "version": "22.13.10",
      "resolved": "https://registry.npmjs.org/@types/node/-/node-22.13.10.tgz",
      "integrity": "sha512-I6LPUvlRH+O6VRUqYOcMudhaIdUVWfsjnZavnsraHvpBwaEyMN29ry+0UVJhImYL16xsscu0aske3yA+uPOWfw==",
      "license": "MIT",
      "dependencies": {
        "undici-types": "~6.20.0"
      }
    },
    "node_modules/@types/phoenix": {
      "version": "1.6.6",
      "resolved": "https://registry.npmjs.org/@types/phoenix/-/phoenix-1.6.6.tgz",
      "integrity": "sha512-PIzZZlEppgrpoT2QgbnDU+MMzuR6BbCjllj0bM70lWoejMeNJAxCchxnv7J3XFkI8MpygtRpzXrIlmWUBclP5A==",
      "license": "MIT"
    },
    "node_modules/@types/ws": {
      "version": "8.18.0",
      "resolved": "https://registry.npmjs.org/@types/ws/-/ws-8.18.0.tgz",
      "integrity": "sha512-8svvI3hMyvN0kKCJMvTJP/x6Y/EoQbepff882wL+Sn5QsXb3etnamgrJq4isrBxSJj5L2AuXcI0+bgkoAXGUJw==",
      "license": "MIT",
      "dependencies": {
        "@types/node": "*"
      }
    },
    "node_modules/accepts": {
      "version": "1.3.8",
      "resolved": "https://registry.npmjs.org/accepts/-/accepts-1.3.8.tgz",
      "integrity": "sha512-PYAthTa2m2VKxuvSD3DPC/Gy+U+sOA1LAuT8mkmRuvw+NACSaeXEQ+NHcVF7rONl6qcaxV3Uuemwawk+7+SJLw==",
      "license": "MIT",
      "dependencies": {
        "mime-types": "~2.1.34",
        "negotiator": "0.6.3"
      },
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/anymatch": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/anymatch/-/anymatch-3.1.3.tgz",
      "integrity": "sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "normalize-path": "^3.0.0",
        "picomatch": "^2.0.4"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/array-flatten": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/array-flatten/-/array-flatten-1.1.1.tgz",
      "integrity": "sha512-PCVAQswWemu6UdxsDFFX/+gVeYqKAod3D3UVm91jHwynguOwAvYPhx8nNlM++NqRcK6CxxpUafjmhIdKiHibqg==",
      "license": "MIT"
    },
    "node_modules/balanced-match": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz",
      "integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/base64id": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/base64id/-/base64id-2.0.0.tgz",
      "integrity": "sha512-lGe34o6EHj9y3Kts9R4ZYs/Gr+6N7MCaMlIFA3F1R2O5/m7K06AxfSeO5530PEERE6/WyEg3lsuyw4GHlPZHog==",
      "license": "MIT",
      "engines": {
        "node": "^4.5.0 || >= 5.9"
      }
    },
    "node_modules/binary-extensions": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.3.0.tgz",
      "integrity": "sha512-Ceh+7ox5qe7LJuLHoY0feh3pHuUDHAcRUeyL2VYghZwfpkNIy/+8Ocg0a3UuSoYzavmylwuLWQOf3hl0jjMMIw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/body-parser": {
      "version": "1.20.3",
      "resolved": "https://registry.npmjs.org/body-parser/-/body-parser-1.20.3.tgz",
      "integrity": "sha512-7rAxByjUMqQ3/bHJy7D6OGXvx/MMc4IqBn/X0fcM1QUcAItpZrBEYhWGem+tzXH90c+G01ypMcYJBO9Y30203g==",
      "license": "MIT",
      "dependencies": {
        "bytes": "3.1.2",
        "content-type": "~1.0.5",
        "debug": "2.6.9",
        "depd": "2.0.0",
        "destroy": "1.2.0",
        "http-errors": "2.0.0",
        "iconv-lite": "0.4.24",
        "on-finished": "2.4.1",
        "qs": "6.13.0",
        "raw-body": "2.5.2",
        "type-is": "~1.6.18",
        "unpipe": "1.0.0"
      },
      "engines": {
        "node": ">= 0.8",
        "npm": "1.2.8000 || >= 1.4.16"
      }
    },
    "node_modules/brace-expansion": {
      "version": "1.1.11",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz",
      "integrity": "sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "balanced-match": "^1.0.0",
        "concat-map": "0.0.1"
      }
    },
    "node_modules/braces": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/braces/-/braces-3.0.3.tgz",
      "integrity": "sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "fill-range": "^7.1.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/bytes": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/bytes/-/bytes-3.1.2.tgz",
      "integrity": "sha512-/Nf7TyzTx6S3yRJObOAV7956r8cr2+Oj8AC5dt8wSP3BQAoeX58NoHyCU8P8zGkNXStjTSi6fzO6F0pBdcYbEg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/call-bind-apply-helpers": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/call-bind-apply-helpers/-/call-bind-apply-helpers-1.0.2.tgz",
      "integrity": "sha512-Sp1ablJ0ivDkSzjcaJdxEunN5/XvksFJ2sMBFfq6x0ryhQV/2b/KwFe21cMpmHtPOSij8K99/wSfoEuTObmuMQ==",
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0",
        "function-bind": "^1.1.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/call-bound": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/call-bound/-/call-bound-1.0.4.tgz",
      "integrity": "sha512-+ys997U96po4Kx/ABpBCqhA9EuxJaQWDQg7295H4hBphv3IZg0boBKuwYpt4YXp6MZ5AmZQnU/tyMTlRpaSejg==",
      "license": "MIT",
      "dependencies": {
        "call-bind-apply-helpers": "^1.0.2",
        "get-intrinsic": "^1.3.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/chokidar": {
      "version": "3.6.0",
      "resolved": "https://registry.npmjs.org/chokidar/-/chokidar-3.6.0.tgz",
      "integrity": "sha512-7VT13fmjotKpGipCW9JEQAusEPE+Ei8nl6/g4FBAmIm0GOOLMua9NDDo/DWp0ZAxCr3cPq5ZpBqmPAQgDda2Pw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "anymatch": "~3.1.2",
        "braces": "~3.0.2",
        "glob-parent": "~5.1.2",
        "is-binary-path": "~2.1.0",
        "is-glob": "~4.0.1",
        "normalize-path": "~3.0.0",
        "readdirp": "~3.6.0"
      },
      "engines": {
        "node": ">= 8.10.0"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      },
      "optionalDependencies": {
        "fsevents": "~2.3.2"
      }
    },
    "node_modules/concat-map": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
      "integrity": "sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/content-disposition": {
      "version": "0.5.4",
      "resolved": "https://registry.npmjs.org/content-disposition/-/content-disposition-0.5.4.tgz",
      "integrity": "sha512-FveZTNuGw04cxlAiWbzi6zTAL/lhehaWbTtgluJh4/E95DqMwTmha3KZN1aAWA8cFIhHzMZUvLevkw5Rqk+tSQ==",
      "license": "MIT",
      "dependencies": {
        "safe-buffer": "5.2.1"
      },
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/content-type": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/content-type/-/content-type-1.0.5.tgz",
      "integrity": "sha512-nTjqfcBFEipKdXCv4YDQWCfmcLZKm81ldF0pAopTvyrFGVbcR6P/VAAd5G7N+0tTr8QqiU0tFadD6FK4NtJwOA==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/cookie": {
      "version": "0.7.1",
      "resolved": "https://registry.npmjs.org/cookie/-/cookie-0.7.1.tgz",
      "integrity": "sha512-6DnInpx7SJ2AK3+CTUE/ZM0vWTUboZCegxhC2xiIydHR9jNuTAASBrfEpHhiGOZw/nX51bHt6YQl8jsGo4y/0w==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/cookie-signature": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/cookie-signature/-/cookie-signature-1.0.6.tgz",
      "integrity": "sha512-QADzlaHc8icV8I7vbaJXJwod9HWYp8uCqf1xa4OfNu1T7JVxQIrUgOWtHdNDtPiywmFbiS12VjotIXLrKM3orQ==",
      "license": "MIT"
    },
    "node_modules/cors": {
      "version": "2.8.5",
      "resolved": "https://registry.npmjs.org/cors/-/cors-2.8.5.tgz",
      "integrity": "sha512-KIHbLJqu73RGr/hnbrO9uBeixNGuvSQjul/jdFvS/KFSIH1hWVd1ng7zOHx+YrEfInLG7q4n6GHQ9cDtxv/P6g==",
      "license": "MIT",
      "dependencies": {
        "object-assign": "^4",
        "vary": "^1"
      },
      "engines": {
        "node": ">= 0.10"
      }
    },
    "node_modules/debug": {
      "version": "2.6.9",
      "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
      "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
      "license": "MIT",
      "dependencies": {
        "ms": "2.0.0"
      }
    },
    "node_modules/depd": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/depd/-/depd-2.0.0.tgz",
      "integrity": "sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/destroy": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/destroy/-/destroy-1.2.0.tgz",
      "integrity": "sha512-2sJGJTaXIIaR1w4iJSNoN0hnMY7Gpc/n8D4qSCJw8QqFWXf7cuAgnEHxBpweaVcPevC2l3KpjYCx3NypQQgaJg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.8",
        "npm": "1.2.8000 || >= 1.4.16"
      }
    },
    "node_modules/dotenv": {
      "version": "16.4.7",
      "resolved": "https://registry.npmjs.org/dotenv/-/dotenv-16.4.7.tgz",
      "integrity": "sha512-47qPchRCykZC03FhkYAhrvwU4xDBFIj1QPqaarj6mdM/hgUzfPHcpkHJOn3mJAufFeeAxAzeGsr5X0M4k6fLZQ==",
      "license": "BSD-2-Clause",
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://dotenvx.com"
      }
    },
    "node_modules/dunder-proto": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/dunder-proto/-/dunder-proto-1.0.1.tgz",
      "integrity": "sha512-KIN/nDJBQRcXw0MLVhZE9iQHmG68qAVIBg9CqmUYjmQIhgij9U5MFvrqkUL5FbtyyzZuOeOt0zdeRe4UY7ct+A==",
      "license": "MIT",
      "dependencies": {
        "call-bind-apply-helpers": "^1.0.1",
        "es-errors": "^1.3.0",
        "gopd": "^1.2.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/ee-first": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/ee-first/-/ee-first-1.1.1.tgz",
      "integrity": "sha512-WMwm9LhRUo+WUaRN+vRuETqG89IgZphVSNkdFgeb6sS/E4OrDIN7t48CAewSHXc6C8lefD8KKfr5vY61brQlow==",
      "license": "MIT"
    },
    "node_modules/encodeurl": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/encodeurl/-/encodeurl-2.0.0.tgz",
      "integrity": "sha512-Q0n9HRi4m6JuGIV1eFlmvJB7ZEVxu93IrMyiMsGC0lrMJMWzRgx6WGquyfQgZVb31vhGgXnfmPNNXmxnOkRBrg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/engine.io": {
      "version": "6.6.4",
      "resolved": "https://registry.npmjs.org/engine.io/-/engine.io-6.6.4.tgz",
      "integrity": "sha512-ZCkIjSYNDyGn0R6ewHDtXgns/Zre/NT6Agvq1/WobF7JXgFff4SeDroKiCO3fNJreU9YG429Sc81o4w5ok/W5g==",
      "license": "MIT",
      "dependencies": {
        "@types/cors": "^2.8.12",
        "@types/node": ">=10.0.0",
        "accepts": "~1.3.4",
        "base64id": "2.0.0",
        "cookie": "~0.7.2",
        "cors": "~2.8.5",
        "debug": "~4.3.1",
        "engine.io-parser": "~5.2.1",
        "ws": "~8.17.1"
      },
      "engines": {
        "node": ">=10.2.0"
      }
    },
    "node_modules/engine.io-parser": {
      "version": "5.2.3",
      "resolved": "https://registry.npmjs.org/engine.io-parser/-/engine.io-parser-5.2.3.tgz",
      "integrity": "sha512-HqD3yTBfnBxIrbnM1DoD6Pcq8NECnh8d4As1Qgh0z5Gg3jRRIqijury0CL3ghu/edArpUYiYqQiDUQBIs4np3Q==",
      "license": "MIT",
      "engines": {
        "node": ">=10.0.0"
      }
    },
    "node_modules/engine.io/node_modules/cookie": {
      "version": "0.7.2",
      "resolved": "https://registry.npmjs.org/cookie/-/cookie-0.7.2.tgz",
      "integrity": "sha512-yki5XnKuf750l50uGTllt6kKILY4nQ1eNIQatoXEByZ5dWgnKqbnqmTrBE5B4N7lrMJKQ2ytWMiTO2o0v6Ew/w==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/engine.io/node_modules/debug": {
      "version": "4.3.7",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.7.tgz",
      "integrity": "sha512-Er2nc/H7RrMXZBFCEim6TCmMk02Z8vLC2Rbi1KEBggpo0fS6l0S1nnapwmIi3yW/+GOJap1Krg4w0Hg80oCqgQ==",
      "license": "MIT",
      "dependencies": {
        "ms": "^2.1.3"
      },
      "engines": {
        "node": ">=6.0"
      },
      "peerDependenciesMeta": {
        "supports-color": {
          "optional": true
        }
      }
    },
    "node_modules/engine.io/node_modules/ms": {
      "version": "2.1.3",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==",
      "license": "MIT"
    },
    "node_modules/engine.io/node_modules/ws": {
      "version": "8.17.1",
      "resolved": "https://registry.npmjs.org/ws/-/ws-8.17.1.tgz",
      "integrity": "sha512-6XQFvXTkbfUOZOKKILFG1PDK2NDQs4azKQl26T0YS5CxqWLgXajbPZ+h4gZekJyRqFU8pvnbAbbs/3TgRPy+GQ==",
      "license": "MIT",
      "engines": {
        "node": ">=10.0.0"
      },
      "peerDependencies": {
        "bufferutil": "^4.0.1",
        "utf-8-validate": ">=5.0.2"
      },
      "peerDependenciesMeta": {
        "bufferutil": {
          "optional": true
        },
        "utf-8-validate": {
          "optional": true
        }
      }
    },
    "node_modules/es-define-property": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/es-define-property/-/es-define-property-1.0.1.tgz",
      "integrity": "sha512-e3nRfgfUZ4rNGL232gUgX06QNyyez04KdjFrF+LTRoOXmrOgFKDg4BCdsjW8EnT69eqdYGmRpJwiPVYNrCaW3g==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-errors": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/es-errors/-/es-errors-1.3.0.tgz",
      "integrity": "sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-object-atoms": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/es-object-atoms/-/es-object-atoms-1.1.1.tgz",
      "integrity": "sha512-FGgH2h8zKNim9ljj7dankFPcICIK9Cp5bm+c2gQSYePhpaG5+esrLODihIorn+Pe6FGJzWhXQotPv73jTaldXA==",
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/escape-html": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/escape-html/-/escape-html-1.0.3.tgz",
      "integrity": "sha512-NiSupZ4OeuGwr68lGIeym/ksIZMJodUGOSCZ/FSnTxcrekbvqrgdUxlJOMpijaKZVjAJrWrGs/6Jy8OMuyj9ow==",
      "license": "MIT"
    },
    "node_modules/etag": {
      "version": "1.8.1",
      "resolved": "https://registry.npmjs.org/etag/-/etag-1.8.1.tgz",
      "integrity": "sha512-aIL5Fx7mawVa300al2BnEE4iNvo1qETxLrPI/o05L7z6go7fCw1J6EQmbK4FmJ2AS7kgVF/KEZWufBfdClMcPg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/express": {
      "version": "4.21.2",
      "resolved": "https://registry.npmjs.org/express/-/express-4.21.2.tgz",
      "integrity": "sha512-28HqgMZAmih1Czt9ny7qr6ek2qddF4FclbMzwhCREB6OFfH+rXAnuNCwo1/wFvrtbgsQDb4kSbX9de9lFbrXnA==",
      "license": "MIT",
      "dependencies": {
        "accepts": "~1.3.8",
        "array-flatten": "1.1.1",
        "body-parser": "1.20.3",
        "content-disposition": "0.5.4",
        "content-type": "~1.0.4",
        "cookie": "0.7.1",
        "cookie-signature": "1.0.6",
        "debug": "2.6.9",
        "depd": "2.0.0",
        "encodeurl": "~2.0.0",
        "escape-html": "~1.0.3",
        "etag": "~1.8.1",
        "finalhandler": "1.3.1",
        "fresh": "0.5.2",
        "http-errors": "2.0.0",
        "merge-descriptors": "1.0.3",
        "methods": "~1.1.2",
        "on-finished": "2.4.1",
        "parseurl": "~1.3.3",
        "path-to-regexp": "0.1.12",
        "proxy-addr": "~2.0.7",
        "qs": "6.13.0",
        "range-parser": "~1.2.1",
        "safe-buffer": "5.2.1",
        "send": "0.19.0",
        "serve-static": "1.16.2",
        "setprototypeof": "1.2.0",
        "statuses": "2.0.1",
        "type-is": "~1.6.18",
        "utils-merge": "1.0.1",
        "vary": "~1.1.2"
      },
      "engines": {
        "node": ">= 0.10.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/express"
      }
    },
    "node_modules/fill-range": {
      "version": "7.1.1",
      "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-7.1.1.tgz",
      "integrity": "sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "to-regex-range": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/finalhandler": {
      "version": "1.3.1",
      "resolved": "https://registry.npmjs.org/finalhandler/-/finalhandler-1.3.1.tgz",
      "integrity": "sha512-6BN9trH7bp3qvnrRyzsBz+g3lZxTNZTbVO2EV1CS0WIcDbawYVdYvGflME/9QP0h0pYlCDBCTjYa9nZzMDpyxQ==",
      "license": "MIT",
      "dependencies": {
        "debug": "2.6.9",
        "encodeurl": "~2.0.0",
        "escape-html": "~1.0.3",
        "on-finished": "2.4.1",
        "parseurl": "~1.3.3",
        "statuses": "2.0.1",
        "unpipe": "~1.0.0"
      },
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/forwarded": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/forwarded/-/forwarded-0.2.0.tgz",
      "integrity": "sha512-buRG0fpBtRHSTCOASe6hD258tEubFoRLb4ZNA6NxMVHNw2gOcwHo9wyablzMzOA5z9xA9L1KNjk/Nt6MT9aYow==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/fresh": {
      "version": "0.5.2",
      "resolved": "https://registry.npmjs.org/fresh/-/fresh-0.5.2.tgz",
      "integrity": "sha512-zJ2mQYM18rEFOudeV4GShTGIQ7RbzA7ozbU9I/XBpm7kqgMywgmylMwXHxZJmkVoYkna9d2pVXVXPdYTP9ej8Q==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/fsevents": {
      "version": "2.3.3",
      "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz",
      "integrity": "sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==",
      "dev": true,
      "hasInstallScript": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": "^8.16.0 || ^10.6.0 || >=11.0.0"
      }
    },
    "node_modules/function-bind": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz",
      "integrity": "sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==",
      "license": "MIT",
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/get-intrinsic": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.3.0.tgz",
      "integrity": "sha512-9fSjSaos/fRIVIp+xSJlE6lfwhES7LNtKaCBIamHsjr2na1BiABJPo0mOjjz8GJDURarmCPGqaiVg5mfjb98CQ==",
      "license": "MIT",
      "dependencies": {
        "call-bind-apply-helpers": "^1.0.2",
        "es-define-property": "^1.0.1",
        "es-errors": "^1.3.0",
        "es-object-atoms": "^1.1.1",
        "function-bind": "^1.1.2",
        "get-proto": "^1.0.1",
        "gopd": "^1.2.0",
        "has-symbols": "^1.1.0",
        "hasown": "^2.0.2",
        "math-intrinsics": "^1.1.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/get-proto": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/get-proto/-/get-proto-1.0.1.tgz",
      "integrity": "sha512-sTSfBjoXBp89JvIKIefqw7U2CCebsc74kiY6awiGogKtoSGbgjYE/G/+l9sF3MWFPNc9IcoOC4ODfKHfxFmp0g==",
      "license": "MIT",
      "dependencies": {
        "dunder-proto": "^1.0.1",
        "es-object-atoms": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/glob-parent": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
      "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "is-glob": "^4.0.1"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/gopd": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/gopd/-/gopd-1.2.0.tgz",
      "integrity": "sha512-ZUKRh6/kUFoAiTAtTYPZJ3hw9wNxx+BIBOijnlG9PnrJsCcSjs1wyyD6vJpaYtgnzDrKYRSqf3OO6Rfa93xsRg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/has-flag": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz",
      "integrity": "sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/has-symbols": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/has-symbols/-/has-symbols-1.1.0.tgz",
      "integrity": "sha512-1cDNdwJ2Jaohmb3sg4OmKaMBwuC48sYni5HUw2DvsC8LjGTLK9h+eb1X6RyuOHe4hT0ULCW68iomhjUoKUqlPQ==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/hasown": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/hasown/-/hasown-2.0.2.tgz",
      "integrity": "sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==",
      "license": "MIT",
      "dependencies": {
        "function-bind": "^1.1.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/http-errors": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/http-errors/-/http-errors-2.0.0.tgz",
      "integrity": "sha512-FtwrG/euBzaEjYeRqOgly7G0qviiXoJWnvEH2Z1plBdXgbyjv34pHTSb9zoeHMyDy33+DWy5Wt9Wo+TURtOYSQ==",
      "license": "MIT",
      "dependencies": {
        "depd": "2.0.0",
        "inherits": "2.0.4",
        "setprototypeof": "1.2.0",
        "statuses": "2.0.1",
        "toidentifier": "1.0.1"
      },
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/iconv-lite": {
      "version": "0.4.24",
      "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.24.tgz",
      "integrity": "sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==",
      "license": "MIT",
      "dependencies": {
        "safer-buffer": ">= 2.1.2 < 3"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/ignore-by-default": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/ignore-by-default/-/ignore-by-default-1.0.1.tgz",
      "integrity": "sha512-Ius2VYcGNk7T90CppJqcIkS5ooHUZyIQK+ClZfMfMNFEF9VSE73Fq+906u/CWu92x4gzZMWOwfFYckPObzdEbA==",
      "dev": true,
      "license": "ISC"
    },
    "node_modules/inherits": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
      "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==",
      "license": "ISC"
    },
    "node_modules/ipaddr.js": {
      "version": "1.9.1",
      "resolved": "https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-1.9.1.tgz",
      "integrity": "sha512-0KI/607xoxSToH7GjN1FfSbLoU0+btTicjsQSWQlh/hZykN8KpmMf7uYwPW3R+akZ6R/w18ZlXSHBYXiYUPO3g==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.10"
      }
    },
    "node_modules/is-binary-path": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz",
      "integrity": "sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "binary-extensions": "^2.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/is-extglob": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz",
      "integrity": "sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-glob": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz",
      "integrity": "sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "is-extglob": "^2.1.1"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-number": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz",
      "integrity": "sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.12.0"
      }
    },
    "node_modules/math-intrinsics": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/math-intrinsics/-/math-intrinsics-1.1.0.tgz",
      "integrity": "sha512-/IXtbwEk5HTPyEwyKX6hGkYXxM9nbj64B+ilVJnC/R6B0pH5G4V3b0pVbL7DBj4tkhBAppbQUlf6F6Xl9LHu1g==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/media-typer": {
      "version": "0.3.0",
      "resolved": "https://registry.npmjs.org/media-typer/-/media-typer-0.3.0.tgz",
      "integrity": "sha512-dq+qelQ9akHpcOl/gUVRTxVIOkAJ1wR3QAvb4RsVjS8oVoFjDGTc679wJYmUmknUF5HwMLOgb5O+a3KxfWapPQ==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/merge-descriptors": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/merge-descriptors/-/merge-descriptors-1.0.3.tgz",
      "integrity": "sha512-gaNvAS7TZ897/rVaZ0nMtAyxNyi/pdbjbAwUpFQpN70GqnVfOiXpeUUMKRBmzXaSQ8DdTX4/0ms62r2K+hE6mQ==",
      "license": "MIT",
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/methods": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/methods/-/methods-1.1.2.tgz",
      "integrity": "sha512-iclAHeNqNm68zFtnZ0e+1L2yUIdvzNoauKU4WBA3VvH/vPFieF7qfRlwUZU+DA9P9bPXIS90ulxoUoCH23sV2w==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/mime": {
      "version": "1.6.0",
      "resolved": "https://registry.npmjs.org/mime/-/mime-1.6.0.tgz",
      "integrity": "sha512-x0Vn8spI+wuJ1O6S7gnbaQg8Pxh4NNHb7KSINmEWKiPE4RKOplvijn+NkmYmmRgP68mc70j2EbeTFRsrswaQeg==",
      "license": "MIT",
      "bin": {
        "mime": "cli.js"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/mime-db": {
      "version": "1.52.0",
      "resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz",
      "integrity": "sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/mime-types": {
      "version": "2.1.35",
      "resolved": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz",
      "integrity": "sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==",
      "license": "MIT",
      "dependencies": {
        "mime-db": "1.52.0"
      },
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/minimatch": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
      "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "brace-expansion": "^1.1.7"
      },
      "engines": {
        "node": "*"
      }
    },
    "node_modules/ms": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
      "integrity": "sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==",
      "license": "MIT"
    },
    "node_modules/negotiator": {
      "version": "0.6.3",
      "resolved": "https://registry.npmjs.org/negotiator/-/negotiator-0.6.3.tgz",
      "integrity": "sha512-+EUsqGPLsM+j/zdChZjsnX51g4XrHFOIXwfnCVPGlQk/k5giakcKsuxCObBRu6DSm9opw/O6slWbJdghQM4bBg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/nodemon": {
      "version": "3.1.9",
      "resolved": "https://registry.npmjs.org/nodemon/-/nodemon-3.1.9.tgz",
      "integrity": "sha512-hdr1oIb2p6ZSxu3PB2JWWYS7ZQ0qvaZsc3hK8DR8f02kRzc8rjYmxAIvdz+aYC+8F2IjNaB7HMcSDg8nQpJxyg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "chokidar": "^3.5.2",
        "debug": "^4",
        "ignore-by-default": "^1.0.1",
        "minimatch": "^3.1.2",
        "pstree.remy": "^1.1.8",
        "semver": "^7.5.3",
        "simple-update-notifier": "^2.0.0",
        "supports-color": "^5.5.0",
        "touch": "^3.1.0",
        "undefsafe": "^2.0.5"
      },
      "bin": {
        "nodemon": "bin/nodemon.js"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/nodemon"
      }
    },
    "node_modules/nodemon/node_modules/debug": {
      "version": "4.4.0",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.4.0.tgz",
      "integrity": "sha512-6WTZ/IxCY/T6BALoZHaE4ctp9xm+Z5kY/pzYaCHRFeyVhojxlrm+46y68HA6hr0TcwEssoxNiDEUJQjfPZ/RYA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ms": "^2.1.3"
      },
      "engines": {
        "node": ">=6.0"
      },
      "peerDependenciesMeta": {
        "supports-color": {
          "optional": true
        }
      }
    },
    "node_modules/nodemon/node_modules/ms": {
      "version": "2.1.3",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/normalize-path": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz",
      "integrity": "sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/object-assign": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
      "integrity": "sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/object-inspect": {
      "version": "1.13.4",
      "resolved": "https://registry.npmjs.org/object-inspect/-/object-inspect-1.13.4.tgz",
      "integrity": "sha512-W67iLl4J2EXEGTbfeHCffrjDfitvLANg0UlX3wFUUSTx92KXRFegMHUVgSqE+wvhAbi4WqjGg9czysTV2Epbew==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/on-finished": {
      "version": "2.4.1",
      "resolved": "https://registry.npmjs.org/on-finished/-/on-finished-2.4.1.tgz",
      "integrity": "sha512-oVlzkg3ENAhCk2zdv7IJwd/QUD4z2RxRwpkcGY8psCVcCYZNq4wYnVWALHM+brtuJjePWiYF/ClmuDr8Ch5+kg==",
      "license": "MIT",
      "dependencies": {
        "ee-first": "1.1.1"
      },
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/parseurl": {
      "version": "1.3.3",
      "resolved": "https://registry.npmjs.org/parseurl/-/parseurl-1.3.3.tgz",
      "integrity": "sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/path-to-regexp": {
      "version": "0.1.12",
      "resolved": "https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-0.1.12.tgz",
      "integrity": "sha512-RA1GjUVMnvYFxuqovrEqZoxxW5NUZqbwKtYz/Tt7nXerk0LbLblQmrsgdeOxV5SFHf0UDggjS/bSeOZwt1pmEQ==",
      "license": "MIT"
    },
    "node_modules/picomatch": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz",
      "integrity": "sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8.6"
      },
      "funding": {
        "url": "https://github.com/sponsors/jonschlinkert"
      }
    },
    "node_modules/proxy-addr": {
      "version": "2.0.7",
      "resolved": "https://registry.npmjs.org/proxy-addr/-/proxy-addr-2.0.7.tgz",
      "integrity": "sha512-llQsMLSUDUPT44jdrU/O37qlnifitDP+ZwrmmZcoSKyLKvtZxpyV0n2/bD/N4tBAAZ/gJEdZU7KMraoK1+XYAg==",
      "license": "MIT",
      "dependencies": {
        "forwarded": "0.2.0",
        "ipaddr.js": "1.9.1"
      },
      "engines": {
        "node": ">= 0.10"
      }
    },
    "node_modules/pstree.remy": {
      "version": "1.1.8",
      "resolved": "https://registry.npmjs.org/pstree.remy/-/pstree.remy-1.1.8.tgz",
      "integrity": "sha512-77DZwxQmxKnu3aR542U+X8FypNzbfJ+C5XQDk3uWjWxn6151aIMGthWYRXTqT1E5oJvg+ljaa2OJi+VfvCOQ8w==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/qs": {
      "version": "6.13.0",
      "resolved": "https://registry.npmjs.org/qs/-/qs-6.13.0.tgz",
      "integrity": "sha512-+38qI9SOr8tfZ4QmJNplMUxqjbe7LKvvZgWdExBOmd+egZTtjLB67Gu0HRX3u/XOq7UU2Nx6nsjvS16Z9uwfpg==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "side-channel": "^1.0.6"
      },
      "engines": {
        "node": ">=0.6"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/range-parser": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/range-parser/-/range-parser-1.2.1.tgz",
      "integrity": "sha512-Hrgsx+orqoygnmhFbKaHE6c296J+HTAQXoxEF6gNupROmmGJRoyzfG3ccAveqCBrwr/2yxQ5BVd/GTl5agOwSg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/raw-body": {
      "version": "2.5.2",
      "resolved": "https://registry.npmjs.org/raw-body/-/raw-body-2.5.2.tgz",
      "integrity": "sha512-8zGqypfENjCIqGhgXToC8aB2r7YrBX+AQAfIPs/Mlk+BtPTztOvTS01NRW/3Eh60J+a48lt8qsCzirQ6loCVfA==",
      "license": "MIT",
      "dependencies": {
        "bytes": "3.1.2",
        "http-errors": "2.0.0",
        "iconv-lite": "0.4.24",
        "unpipe": "1.0.0"
      },
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/readdirp": {
      "version": "3.6.0",
      "resolved": "https://registry.npmjs.org/readdirp/-/readdirp-3.6.0.tgz",
      "integrity": "sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "picomatch": "^2.2.1"
      },
      "engines": {
        "node": ">=8.10.0"
      }
    },
    "node_modules/safe-buffer": {
      "version": "5.2.1",
      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz",
      "integrity": "sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "license": "MIT"
    },
    "node_modules/safer-buffer": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz",
      "integrity": "sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==",
      "license": "MIT"
    },
    "node_modules/semver": {
      "version": "7.7.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-7.7.1.tgz",
      "integrity": "sha512-hlq8tAfn0m/61p4BVRcPzIGr6LKiMwo4VM6dGi6pt4qcRkmNzTcWq6eCEjEh+qXjkMDvPlOFFSGwQjoEa6gyMA==",
      "dev": true,
      "license": "ISC",
      "bin": {
        "semver": "bin/semver.js"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/send": {
      "version": "0.19.0",
      "resolved": "https://registry.npmjs.org/send/-/send-0.19.0.tgz",
      "integrity": "sha512-dW41u5VfLXu8SJh5bwRmyYUbAoSB3c9uQh6L8h/KtsFREPWpbX1lrljJo186Jc4nmci/sGUZ9a0a0J2zgfq2hw==",
      "license": "MIT",
      "dependencies": {
        "debug": "2.6.9",
        "depd": "2.0.0",
        "destroy": "1.2.0",
        "encodeurl": "~1.0.2",
        "escape-html": "~1.0.3",
        "etag": "~1.8.1",
        "fresh": "0.5.2",
        "http-errors": "2.0.0",
        "mime": "1.6.0",
        "ms": "2.1.3",
        "on-finished": "2.4.1",
        "range-parser": "~1.2.1",
        "statuses": "2.0.1"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/send/node_modules/encodeurl": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/encodeurl/-/encodeurl-1.0.2.tgz",
      "integrity": "sha512-TPJXq8JqFaVYm2CWmPvnP2Iyo4ZSM7/QKcSmuMLDObfpH5fi7RUGmd/rTDf+rut/saiDiQEeVTNgAmJEdAOx0w==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/send/node_modules/ms": {
      "version": "2.1.3",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==",
      "license": "MIT"
    },
    "node_modules/serve-static": {
      "version": "1.16.2",
      "resolved": "https://registry.npmjs.org/serve-static/-/serve-static-1.16.2.tgz",
      "integrity": "sha512-VqpjJZKadQB/PEbEwvFdO43Ax5dFBZ2UECszz8bQ7pi7wt//PWe1P6MN7eCnjsatYtBT6EuiClbjSWP2WrIoTw==",
      "license": "MIT",
      "dependencies": {
        "encodeurl": "~2.0.0",
        "escape-html": "~1.0.3",
        "parseurl": "~1.3.3",
        "send": "0.19.0"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/setprototypeof": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.2.0.tgz",
      "integrity": "sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw==",
      "license": "ISC"
    },
    "node_modules/side-channel": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/side-channel/-/side-channel-1.1.0.tgz",
      "integrity": "sha512-ZX99e6tRweoUXqR+VBrslhda51Nh5MTQwou5tnUDgbtyM0dBgmhEDtWGP/xbKn6hqfPRHujUNwz5fy/wbbhnpw==",
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0",
        "object-inspect": "^1.13.3",
        "side-channel-list": "^1.0.0",
        "side-channel-map": "^1.0.1",
        "side-channel-weakmap": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/side-channel-list": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/side-channel-list/-/side-channel-list-1.0.0.tgz",
      "integrity": "sha512-FCLHtRD/gnpCiCHEiJLOwdmFP+wzCmDEkc9y7NsYxeF4u7Btsn1ZuwgwJGxImImHicJArLP4R0yX4c2KCrMrTA==",
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0",
        "object-inspect": "^1.13.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/side-channel-map": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/side-channel-map/-/side-channel-map-1.0.1.tgz",
      "integrity": "sha512-VCjCNfgMsby3tTdo02nbjtM/ewra6jPHmpThenkTYh8pG9ucZ/1P8So4u4FGBek/BjpOVsDCMoLA/iuBKIFXRA==",
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "es-errors": "^1.3.0",
        "get-intrinsic": "^1.2.5",
        "object-inspect": "^1.13.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/side-channel-weakmap": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/side-channel-weakmap/-/side-channel-weakmap-1.0.2.tgz",
      "integrity": "sha512-WPS/HvHQTYnHisLo9McqBHOJk2FkHO/tlpvldyrnem4aeQp4hai3gythswg6p01oSoTl58rcpiFAjF2br2Ak2A==",
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "es-errors": "^1.3.0",
        "get-intrinsic": "^1.2.5",
        "object-inspect": "^1.13.3",
        "side-channel-map": "^1.0.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/simple-update-notifier": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/simple-update-notifier/-/simple-update-notifier-2.0.0.tgz",
      "integrity": "sha512-a2B9Y0KlNXl9u/vsW6sTIu9vGEpfKu2wRV6l1H3XEas/0gUIzGzBoP/IouTcUQbm9JWZLH3COxyn03TYlFax6w==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "semver": "^7.5.3"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/socket.io": {
      "version": "4.8.1",
      "resolved": "https://registry.npmjs.org/socket.io/-/socket.io-4.8.1.tgz",
      "integrity": "sha512-oZ7iUCxph8WYRHHcjBEc9unw3adt5CmSNlppj/5Q4k2RIrhl8Z5yY2Xr4j9zj0+wzVZ0bxmYoGSzKJnRl6A4yg==",
      "license": "MIT",
      "dependencies": {
        "accepts": "~1.3.4",
        "base64id": "~2.0.0",
        "cors": "~2.8.5",
        "debug": "~4.3.2",
        "engine.io": "~6.6.0",
        "socket.io-adapter": "~2.5.2",
        "socket.io-parser": "~4.2.4"
      },
      "engines": {
        "node": ">=10.2.0"
      }
    },
    "node_modules/socket.io-adapter": {
      "version": "2.5.5",
      "resolved": "https://registry.npmjs.org/socket.io-adapter/-/socket.io-adapter-2.5.5.tgz",
      "integrity": "sha512-eLDQas5dzPgOWCk9GuuJC2lBqItuhKI4uxGgo9aIV7MYbk2h9Q6uULEh8WBzThoI7l+qU9Ast9fVUmkqPP9wYg==",
      "license": "MIT",
      "dependencies": {
        "debug": "~4.3.4",
        "ws": "~8.17.1"
      }
    },
    "node_modules/socket.io-adapter/node_modules/debug": {
      "version": "4.3.7",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.7.tgz",
      "integrity": "sha512-Er2nc/H7RrMXZBFCEim6TCmMk02Z8vLC2Rbi1KEBggpo0fS6l0S1nnapwmIi3yW/+GOJap1Krg4w0Hg80oCqgQ==",
      "license": "MIT",
      "dependencies": {
        "ms": "^2.1.3"
      },
      "engines": {
        "node": ">=6.0"
      },
      "peerDependenciesMeta": {
        "supports-color": {
          "optional": true
        }
      }
    },
    "node_modules/socket.io-adapter/node_modules/ms": {
      "version": "2.1.3",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==",
      "license": "MIT"
    },
    "node_modules/socket.io-adapter/node_modules/ws": {
      "version": "8.17.1",
      "resolved": "https://registry.npmjs.org/ws/-/ws-8.17.1.tgz",
      "integrity": "sha512-6XQFvXTkbfUOZOKKILFG1PDK2NDQs4azKQl26T0YS5CxqWLgXajbPZ+h4gZekJyRqFU8pvnbAbbs/3TgRPy+GQ==",
      "license": "MIT",
      "engines": {
        "node": ">=10.0.0"
      },
      "peerDependencies": {
        "bufferutil": "^4.0.1",
        "utf-8-validate": ">=5.0.2"
      },
      "peerDependenciesMeta": {
        "bufferutil": {
          "optional": true
        },
        "utf-8-validate": {
          "optional": true
        }
      }
    },
    "node_modules/socket.io-parser": {
      "version": "4.2.4",
      "resolved": "https://registry.npmjs.org/socket.io-parser/-/socket.io-parser-4.2.4.tgz",
      "integrity": "sha512-/GbIKmo8ioc+NIWIhwdecY0ge+qVBSMdgxGygevmdHj24bsfgtCmcUUcQ5ZzcylGFHsN3k4HB4Cgkl96KVnuew==",
      "license": "MIT",
      "dependencies": {
        "@socket.io/component-emitter": "~3.1.0",
        "debug": "~4.3.1"
      },
      "engines": {
        "node": ">=10.0.0"
      }
    },
    "node_modules/socket.io-parser/node_modules/debug": {
      "version": "4.3.7",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.7.tgz",
      "integrity": "sha512-Er2nc/H7RrMXZBFCEim6TCmMk02Z8vLC2Rbi1KEBggpo0fS6l0S1nnapwmIi3yW/+GOJap1Krg4w0Hg80oCqgQ==",
      "license": "MIT",
      "dependencies": {
        "ms": "^2.1.3"
      },
      "engines": {
        "node": ">=6.0"
      },
      "peerDependenciesMeta": {
        "supports-color": {
          "optional": true
        }
      }
    },
    "node_modules/socket.io-parser/node_modules/ms": {
      "version": "2.1.3",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==",
      "license": "MIT"
    },
    "node_modules/socket.io/node_modules/debug": {
      "version": "4.3.7",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.7.tgz",
      "integrity": "sha512-Er2nc/H7RrMXZBFCEim6TCmMk02Z8vLC2Rbi1KEBggpo0fS6l0S1nnapwmIi3yW/+GOJap1Krg4w0Hg80oCqgQ==",
      "license": "MIT",
      "dependencies": {
        "ms": "^2.1.3"
      },
      "engines": {
        "node": ">=6.0"
      },
      "peerDependenciesMeta": {
        "supports-color": {
          "optional": true
        }
      }
    },
    "node_modules/socket.io/node_modules/ms": {
      "version": "2.1.3",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==",
      "license": "MIT"
    },
    "node_modules/statuses": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/statuses/-/statuses-2.0.1.tgz",
      "integrity": "sha512-RwNA9Z/7PrK06rYLIzFMlaF+l73iwpzsqRIFgbMLbTcLD6cOao82TaWefPXQvB2fOC4AjuYSEndS7N/mTCbkdQ==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/supports-color": {
      "version": "5.5.0",
      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
      "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "has-flag": "^3.0.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/to-regex-range": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz",
      "integrity": "sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "is-number": "^7.0.0"
      },
      "engines": {
        "node": ">=8.0"
      }
    },
    "node_modules/toidentifier": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/toidentifier/-/toidentifier-1.0.1.tgz",
      "integrity": "sha512-o5sSPKEkg/DIQNmH43V0/uerLrpzVedkUh8tGNvaeXpfpuwjKenlSox/2O/BTlZUtEe+JG7s5YhEz608PlAHRA==",
      "license": "MIT",
      "engines": {
        "node": ">=0.6"
      }
    },
    "node_modules/touch": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/touch/-/touch-3.1.1.tgz",
      "integrity": "sha512-r0eojU4bI8MnHr8c5bNo7lJDdI2qXlWWJk6a9EAFG7vbhTjElYhBVS3/miuE0uOuoLdb8Mc/rVfsmm6eo5o9GA==",
      "dev": true,
      "license": "ISC",
      "bin": {
        "nodetouch": "bin/nodetouch.js"
      }
    },
    "node_modules/tr46": {
      "version": "0.0.3",
      "resolved": "https://registry.npmjs.org/tr46/-/tr46-0.0.3.tgz",
      "integrity": "sha512-N3WMsuqV66lT30CrXNbEjx4GEwlow3v6rr4mCcv6prnfwhS01rkgyFdjPNBYd9br7LpXV1+Emh01fHnq2Gdgrw==",
      "license": "MIT"
    },
    "node_modules/type-is": {
      "version": "1.6.18",
      "resolved": "https://registry.npmjs.org/type-is/-/type-is-1.6.18.tgz",
      "integrity": "sha512-TkRKr9sUTxEH8MdfuCSP7VizJyzRNMjj2J2do2Jr3Kym598JVdEksuzPQCnlFPW4ky9Q+iA+ma9BGm06XQBy8g==",
      "license": "MIT",
      "dependencies": {
        "media-typer": "0.3.0",
        "mime-types": "~2.1.24"
      },
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/undefsafe": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/undefsafe/-/undefsafe-2.0.5.tgz",
      "integrity": "sha512-WxONCrssBM8TSPRqN5EmsjVrsv4A8X12J4ArBiiayv3DyyG3ZlIg6yysuuSYdZsVz3TKcTg2fd//Ujd4CHV1iA==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/undici-types": {
      "version": "6.20.0",
      "resolved": "https://registry.npmjs.org/undici-types/-/undici-types-6.20.0.tgz",
      "integrity": "sha512-Ny6QZ2Nju20vw1SRHe3d9jVu6gJ+4e3+MMpqu7pqE5HT6WsTSlce++GQmK5UXS8mzV8DSYHrQH+Xrf2jVcuKNg==",
      "license": "MIT"
    },
    "node_modules/unpipe": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/unpipe/-/unpipe-1.0.0.tgz",
      "integrity": "sha512-pjy2bYhSsufwWlKwPc+l3cN7+wuJlK6uz0YdJEOlQDbl6jo/YlPi4mb8agUkVC8BF7V8NuzeyPNqRksA3hztKQ==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/utils-merge": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/utils-merge/-/utils-merge-1.0.1.tgz",
      "integrity": "sha512-pMZTvIkT1d+TFGvDOqodOclx0QWkkgi6Tdoa8gC8ffGAAqz9pzPTZWAybbsHHoED/ztMtkv/VoYTYyShUn81hA==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4.0"
      }
    },
    "node_modules/vary": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/vary/-/vary-1.1.2.tgz",
      "integrity": "sha512-BNGbWLfd0eUPabhkXUVm0j8uuvREyTh5ovRa/dyow/BqAbZJyC+5fU+IzQOzmAKzYqYRAISoRhdQr3eIZ/PXqg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/webidl-conversions": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-3.0.1.tgz",
      "integrity": "sha512-2JAn3z8AR6rjK8Sm8orRC0h/bcl/DqL7tRPdGZ4I1CjdF+EaMLmYxBHyXuKL849eucPFhvBoxMsflfOb8kxaeQ==",
      "license": "BSD-2-Clause"
    },
    "node_modules/whatwg-url": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/whatwg-url/-/whatwg-url-5.0.0.tgz",
      "integrity": "sha512-saE57nupxk6v3HY35+jzBwYa0rKSy0XR8JSxZPwgLr7ys0IBzhGviA1/TUGJLmSVqs8pb9AnvICXEuOHLprYTw==",
      "license": "MIT",
      "dependencies": {
        "tr46": "~0.0.3",
        "webidl-conversions": "^3.0.0"
      }
    },
    "node_modules/ws": {
      "version": "8.18.1",
      "resolved": "https://registry.npmjs.org/ws/-/ws-8.18.1.tgz",
      "integrity": "sha512-RKW2aJZMXeMxVpnZ6bck+RswznaxmzdULiBr6KY7XkTnW8uvt0iT9H5DkHUChXrc+uurzwa0rVI16n/Xzjdz1w==",
      "license": "MIT",
      "engines": {
        "node": ">=10.0.0"
      },
      "peerDependencies": {
        "bufferutil": "^4.0.1",
        "utf-8-validate": ">=5.0.2"
      },
      "peerDependenciesMeta": {
        "bufferutil": {
          "optional": true
        },
        "utf-8-validate": {
          "optional": true
        }
      }
    }
  }
}


===== /Users/robert/Victorryan/procfile =====
web: npm start

===== /Users/robert/Victorryan/render-start.js =====
const { execSync } = require("child_process");
const path = require("path");

try {
  // Change to backend directory and start the server
  process.chdir(path.join(__dirname, "backend"));
  execSync("node server.js", { stdio: "inherit" });
} catch (error) {
  console.error("Failed to start server:", error);
  process.exit(1);
}


===== /Users/robert/Victorryan/render.yaml =====
services:
  - type: web
    name: victorryan
    env: node
    buildCommand: npm install
    startCommand: npm start
    envVars:
      - key: NODE_ENV
        value: production
      - key: SUPABASE_URL
        sync: false
      - key: SUPABASE_KEY
        sync: false
    buildFilter:
      paths:
        - backend/**
        - frontend/**
        - package.json


===== /Users/robert/Victorryan/server.js =====
const express = require("express");
const path = require("path");
const cors = require("cors");
const http = require("http");
const socketIo = require("socket.io");
require("dotenv").config();

const app = express();
const server = http.createServer(app);
const io = socketIo(server);

// Afficher les chemins pour le débogage
console.log("Chemins de l'application:");
console.log("- Répertoire courant:", process.cwd());
console.log("- Chemin du frontend:", path.join(__dirname, "frontend"));
console.log("- Chemin du stock:", path.join(__dirname, "stock"));

// Configuration de base
app.use(cors());
app.use(express.json());

// Servir les fichiers statiques du frontend
app.use(express.static(path.join(__dirname, "frontend")));

// Servir les fichiers du dossier stock (pour les images des cartes)
app.use("/stock", express.static(path.join(__dirname, "stock")));

// Initialiser le module de gestion des jeux avec Socket.io
const gameManager = require("./backend/services/gameManager")(io);

// Routes pour les parties et les cartes
app.use("/games", require("./backend/routes/games"));
app.use("/cards", require("./backend/routes/cards"));

// Routes de base
app.get("/", (req, res) => {
  res.sendFile(path.join(__dirname, "frontend/index.html"));
});

// Route de diagnostic pour vérifier les chemins et les données des cartes
app.get("/api/diagnostic", (req, res) => {
  const cardManager = require("./backend/services/cardManager");
  const persoSample = cardManager.getRandomCards("perso", 1);
  const bonusSample = cardManager.getRandomCards("bonus", 1);

  res.json({
    status: "ok",
    environment: process.env.NODE_ENV || "development",
    paths: {
      cwd: process.cwd(),
      frontend: path.join(__dirname, "frontend"),
      stock: path.join(__dirname, "stock"),
    },
    cards: {
      persoSample,
      bonusSample,
    },
  });
});

// Configuration des WebSockets
io.on("connection", (socket) => {
  console.log("Un client s'est connecté:", socket.id);

  socket.on("joinGame", ({ gameId, playerId }) => {
    socket.join(gameId);
    console.log(`Joueur ${playerId} a rejoint la partie ${gameId}`);
  });

  socket.on("playCard", ({ gameId, playerId, cardData }) => {
    // Informer les autres joueurs de la carte jouée
    socket.to(gameId).emit("cardPlayed", { playerId, cardData });
  });

  socket.on("endTurn", ({ gameId, playerId }) => {
    // Informer les autres joueurs de la fin du tour
    socket.to(gameId).emit("turnEnded", { playerId });
  });

  socket.on("disconnect", () => {
    console.log("Un client s'est déconnecté:", socket.id);
  });
});

// Port d'écoute
const PORT = process.env.PORT || 3000;
server.listen(PORT, () => {
  console.log(`Serveur démarré sur le port ${PORT}`);
});


